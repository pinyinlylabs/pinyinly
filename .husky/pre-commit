#!/bin/bash

# Pre-commit hook to auto-format code
# This ensures all committed code is properly formatted

set -e

echo "ðŸŽ¨ Auto-formatting staged files..."

# Get list of staged files
STAGED_FILES=$(git diff --cached --name-only)

if [ -z "$STAGED_FILES" ]; then
    echo "No staged files to format."
    exit 0
fi

# Format files in each project if they have staged changes
if echo "$STAGED_FILES" | grep -q "^projects/app/"; then
    echo "ðŸ“¦ Formatting app project..."
    moon run app:prettier || true
fi

if echo "$STAGED_FILES" | grep -q "^projects/lib/"; then
    echo "ðŸ“¦ Formatting lib project..."
    moon run lib:prettier || true
fi

if echo "$STAGED_FILES" | grep -q "^projects/eslint-rules/"; then
    echo "ðŸ“¦ Formatting eslint-rules project..."
    moon run eslint-rules:prettier || true
fi

if echo "$STAGED_FILES" | grep -q "^projects/expo-audio-sprites/"; then
    echo "ðŸ“¦ Formatting expo-audio-sprites project..."
    moon run expo-audio-sprites:prettier || true
fi

if echo "$STAGED_FILES" | grep -q "^projects/emails/"; then
    echo "ðŸ“¦ Formatting emails project..."
    moon run emails:prettier || true
fi

# Re-stage any files that were formatted
echo "ðŸ“¦ Re-staging formatted files..."
echo "$STAGED_FILES" | xargs git add

echo "âœ… Pre-commit formatting complete!"
