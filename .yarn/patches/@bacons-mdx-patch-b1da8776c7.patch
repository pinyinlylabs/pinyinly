diff --git a/build/server/metro-transformer.js b/build/server/metro-transformer.js
index 4713056d27d97faf30c06673c1b20a45c9307722..0c8239dc89a7182c6f5a2e1a4b16c2b5e34b80bb 100644
--- a/build/server/metro-transformer.js
+++ b/build/server/metro-transformer.js
@@ -1,3 +1,4 @@
+// @ts-expect-error
 "use strict";
 Object.defineProperty(exports, "__esModule", {
     value: true
@@ -64,7 +65,7 @@ function createTransformer({ matchFile =(props)=>!!props.filename.match(/\.mdx?$
                         return;
                     }
                     if (node.value.match(/<([A-Z][\w.]+)/)) {
-                        node.value = node.value.replace(/<([A-Z][\w.]+)/, `<$1 __components={html} `);
+                        node.value = node.value.replaceAll(/<([A-Z][\w.]+)/g, `<$1 __components={html} `);
                     }
                 });
             }
@@ -104,7 +105,7 @@ function createTransformer({ matchFile =(props)=>!!props.filename.match(/\.mdx?$
                 return p1.replace(/\\\\/g, "\\").replace(/\\"/g, '"');
             });
         }
-        props.src = getTemplate(contents);
+        props.src = getTemplate(contents.toString());
         debug("Compiled MDX file:", props.filename, "\n", props.src);
         return props;
     }
diff --git a/build/server/metro-transformer.js.map b/build/server/metro-transformer.js.map
index 917eff9ecf2610d15f8e9ee3066f261b41c26807..1c83dda03eaf1e524ee62e05e4e540a381c9d7fb 100644
--- a/build/server/metro-transformer.js.map
+++ b/build/server/metro-transformer.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../../src/server/metro-transformer.ts"],"sourcesContent":["import mdx from \"@mdx-js/mdx\";\nimport { Processor } from \"unified\";\nimport { Parent } from \"unist\";\nimport visit from \"unist-util-visit\";\n\nconst debug = require(\"debug\")(\"bacons:mdx:transform\") as typeof console.log;\n\nconst getTemplate = (rawMdxString) => {\n  const replacedShortcodes = rawMdxString.replace(\n    /= makeShortcode\\(/g,\n    \"= makeExpoMetroProvided(\"\n  );\n\n  return `\"use client\";\nimport { useMDXComponents } from \"@bacons/mdx\";\n${makeExpoMetroProvidedTemplate}\n${replacedShortcodes.replace(\n  \"return <MDXLayout\",\n  \"const html = { ...useMDXComponents(), ...(components ?? {}) };\\n  const MDXLayout = html.Wrapper;\\n  return <MDXLayout\"\n)}`;\n};\n\nconst makeExpoMetroProvidedTemplate = `\nconst makeExpoMetroProvided = name => function MDXExpoMetroComponent({ __components, ...props}) {\n  if (__components[name] == null) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n    return <__components.span {...props}/>\n  }\n  return __components[name](props);\n};`;\n\nfunction isParent(node: any): node is Parent {\n  return Array.isArray(node?.children);\n}\n\nexport function createTransformer({\n  matchFile = (props) => !!props.filename.match(/\\.mdx?$/),\n  matchLocalAsset = (props) => !!props.src.match(/^[.@]/),\n  remarkPlugins = [],\n}: {\n  /**\n   * @param props Metro transform props.\n   * @returns true if the file should be transformed.\n   * @default Function that matches if a file ends with `.mdx` or `.md`.\n   */\n  matchFile?: (props: { filename: string; src: string }) => boolean;\n  /**\n   * @returns true if the src reference should be converted to a local `require`.\n   * @default Function that matches strings starting with `.` or `@`.\n   */\n  matchLocalAsset?: (props: { src: string }) => boolean;\n\n  remarkPlugins?: any[];\n} = {}) {\n  const compiler = mdx.createCompiler({ remarkPlugins }) as Processor;\n\n  // Append this final rule at the end of the compiler chain:\n  compiler.use(() => {\n    return (tree, _file) => {\n      if (isParent(tree)) {\n        // Pass components={html} to custom components:\n        visit(tree, \"jsx\", (node) => {\n          if (\n            !(\"value\" in node) ||\n            !node.value ||\n            typeof node.value !== \"string\"\n          ) {\n            return;\n          }\n          if (node.value.match(/<([A-Z][\\w.]+)/)) {\n            node.value = node.value.replace(\n              /<([A-Z][\\w.]+)/,\n              `<$1 __components={html} `\n            );\n          }\n        });\n      }\n\n      if (isParent(tree)) {\n        const walkForImages = (node: any) => {\n          if (node.tagName === \"img\") {\n            if (matchLocalAsset(node.properties)) {\n              // Relative path should be turned into a require statement:\n              node.properties.src = `[[_Expo_MemberProperty:require(\"${node.properties.src}\")]]`;\n              // delete node.properties.src;\n            }\n          }\n          if (isParent(node)) {\n            node.children.forEach(walkForImages);\n          }\n        };\n\n        tree.children.map(walkForImages);\n      }\n\n      visit(tree, \"element\", (node) => {\n        // Ensure we don't use react-dom elements\n        // @ts-expect-error: incorrect types\n        node.tagName = \"html.\" + node.tagName;\n      });\n    };\n  });\n\n  async function transformMdx(props: { filename: string; src: string }) {\n    if (!matchFile(props)) {\n      return props;\n    }\n\n    let { contents } = await compiler.process({\n      contents: props.src,\n      path: props.filename,\n    });\n\n    if (typeof contents === \"string\") {\n      // Support member expressions in require statements:\n      contents = contents.replace(\n        /\"\\[\\[_Expo_MemberProperty:(.*)\\]\\]\"/g,\n        (match, p1) => {\n          return p1.replace(/\\\\\\\\/g, \"\\\\\").replace(/\\\\\"/g, '\"');\n        }\n      );\n    }\n\n    props.src = getTemplate(contents);\n\n    debug(\"Compiled MDX file:\", props.filename, \"\\n\", props.src);\n\n    return props;\n  }\n\n  return { transform: transformMdx, compiler };\n}\n\nexport const transform = createTransformer().transform;\n"],"names":["createTransformer","transform","debug","require","getTemplate","rawMdxString","replacedShortcodes","replace","makeExpoMetroProvidedTemplate","isParent","node","Array","isArray","children","matchFile","props","filename","match","matchLocalAsset","src","remarkPlugins","compiler","mdx","createCompiler","use","tree","_file","visit","value","walkForImages","tagName","properties","forEach","map","transformMdx","contents","process","path","p1"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"sources":["../../../src/server/metro-transformer.ts"],"sourcesContent":["// @ts-expect-error\nimport mdx from \"@mdx-js/mdx\";\nimport { Processor } from \"unified\";\nimport { Parent } from \"unist\";\nimport visit from \"unist-util-visit\";\n\nconst debug = require(\"debug\")(\"bacons:mdx:transform\") as typeof console.log;\n\nconst getTemplate = (rawMdxString: string) => {\n  const replacedShortcodes = rawMdxString.replace(\n    /= makeShortcode\\(/g,\n    \"= makeExpoMetroProvided(\"\n  );\n\n  return `\"use client\";\nimport { useMDXComponents } from \"@bacons/mdx\";\n${makeExpoMetroProvidedTemplate}\n${replacedShortcodes.replace(\n  \"return <MDXLayout\",\n  \"const html = { ...useMDXComponents(), ...(components ?? {}) };\\n  const MDXLayout = html.Wrapper;\\n  return <MDXLayout\"\n)}`;\n};\n\nconst makeExpoMetroProvidedTemplate = `\nconst makeExpoMetroProvided = name => function MDXExpoMetroComponent({ __components, ...props}) {\n  if (__components[name] == null) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n    return <__components.span {...props}/>\n  }\n  return __components[name](props);\n};`;\n\nfunction isParent(node: any): node is Parent {\n  return Array.isArray(node?.children);\n}\n\nexport function createTransformer({\n  matchFile = (props) => !!props.filename.match(/\\.mdx?$/),\n  matchLocalAsset = (props) => !!props.src.match(/^[.@]/),\n  remarkPlugins = [],\n}: {\n  /**\n   * @param props Metro transform props.\n   * @returns true if the file should be transformed.\n   * @default Function that matches if a file ends with `.mdx` or `.md`.\n   */\n  matchFile?: (props: { filename: string; src: string }) => boolean;\n  /**\n   * @returns true if the src reference should be converted to a local `require`.\n   * @default Function that matches strings starting with `.` or `@`.\n   */\n  matchLocalAsset?: (props: { src: string }) => boolean;\n\n  remarkPlugins?: any[];\n} = {}) {\n  const compiler = mdx.createCompiler({ remarkPlugins }) as Processor;\n\n  // Append this final rule at the end of the compiler chain:\n  compiler.use(() => {\n    return (tree, _file) => {\n      if (isParent(tree)) {\n        // Pass components={html} to custom components:\n        visit(tree, \"jsx\", (node) => {\n          if (\n            !(\"value\" in node) ||\n            !node.value ||\n            typeof node.value !== \"string\"\n          ) {\n            return;\n          }\n          if (node.value.match(/<([A-Z][\\w.]+)/)) {\n            node.value = node.value.replaceAll(\n              /<([A-Z][\\w.]+)/g,\n              `<$1 __components={html} `\n            );\n          }\n        });\n      }\n\n      if (isParent(tree)) {\n        const walkForImages = (node: any) => {\n          if (node.tagName === \"img\") {\n            if (matchLocalAsset(node.properties)) {\n              // Relative path should be turned into a require statement:\n              node.properties.src = `[[_Expo_MemberProperty:require(\"${node.properties.src}\")]]`;\n              // delete node.properties.src;\n            }\n          }\n          if (isParent(node)) {\n            node.children.forEach(walkForImages);\n          }\n        };\n\n        tree.children.map(walkForImages);\n      }\n\n      visit(tree, \"element\", (node) => {\n        // Ensure we don't use react-dom elements\n        // @ts-expect-error: incorrect types\n        node.tagName = \"html.\" + node.tagName;\n      });\n    };\n  });\n\n  async function transformMdx(props: { filename: string; src: string }) {\n    if (!matchFile(props)) {\n      return props;\n    }\n\n    let { contents } = await compiler.process({\n      contents: props.src,\n      path: props.filename,\n    });\n\n    if (typeof contents === \"string\") {\n      // Support member expressions in require statements:\n      contents = contents.replace(\n        /\"\\[\\[_Expo_MemberProperty:(.*)\\]\\]\"/g,\n        (match, p1) => {\n          return p1.replace(/\\\\\\\\/g, \"\\\\\").replace(/\\\\\"/g, '\"');\n        }\n      );\n    }\n\n    props.src = getTemplate(contents.toString());\n\n    debug(\"Compiled MDX file:\", props.filename, \"\\n\", props.src);\n\n    return props;\n  }\n\n  return { transform: transformMdx, compiler };\n}\n\nexport const transform = createTransformer().transform;\n"],"names":["createTransformer","transform","debug","require","getTemplate","rawMdxString","replacedShortcodes","replace","makeExpoMetroProvidedTemplate","isParent","node","Array","isArray","children","matchFile","props","filename","match","matchLocalAsset","src","remarkPlugins","compiler","mdx","createCompiler","use","tree","_file","visit","value","replaceAll","walkForImages","tagName","properties","forEach","map","transformMdx","contents","process","path","p1","toString"],"mappings":"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"}
\ No newline at end of file
