// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 平 (píng)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" píng"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"p"}</_components.strong>{" like "}<_components.strong>{"\"p\""}</_components.strong>{" in \"ping\""}</_components.li>{"\n"}<_components.li><_components.strong>{"íng"}</_components.strong>{" sounds like "}<_components.strong>{"\"eeng\""}</_components.strong>{" but with rising tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"píng"}</_components.strong>{" sounds like "}<_components.strong>{"\"peeng\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip (Second tone: ˊ)"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" is a "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question:"}</_components.p>{"\n"}<_components.p>{"Say it like asking if something is "}<_components.strong>{"flat"}</_components.strong>{": "}<_components.strong>{"\"píng?\""}</_components.strong>{" — that rising, curious tone is the "}<_components.strong>{"second\ntone"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"平 (píng) - \"flat; level\""}</_components.li>{"\n"}<_components.li>{"平常 (píng cháng) - \"ordinary; usual\""}</_components.li>{"\n"}<_components.li>{"平安 (píng ān) - \"safe; peaceful\""}</_components.li>{"\n"}<_components.li>{"平时 (píng shí) - \"usually; normally\""}</_components.li>{"\n"}<_components.li>{"水平 (shuǐ píng) - \"level; standard\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of "}<_components.strong>{"平"}</_components.strong>{" as asking if a surface is "}<_components.strong>{"flat"}</_components.strong>{" with that rising, questioning tone — that's the\n"}<_components.strong>{"second tone"}</_components.strong>{" inquiry!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
