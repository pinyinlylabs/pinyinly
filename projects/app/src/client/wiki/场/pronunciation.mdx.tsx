// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 场 (chǎng)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" chǎng"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Third tone"}</_components.strong>{" — "}<_components.strong>{"falling-rising"}</_components.strong>{" tone, like saying \"uh-huh\" when nodding"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"ch"}</_components.strong>{" like "}<_components.strong>{"\"ch\""}</_components.strong>{" in \"chart\" (but with tongue tip down)"}</_components.li>{"\n"}<_components.li><_components.strong>{"ǎng"}</_components.strong>{" sounds like "}<_components.strong>{"\"ahng\""}</_components.strong>{", but with third tone → dip down and rise up"}</_components.li>{"\n"}<_components.li><_components.strong>{"chǎng"}</_components.strong>{" sounds like "}<_components.strong>{"\"chahng\""}</_components.strong>{" with a dip-then-rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"third tone"}</_components.strong>{" (ˇ) is a "}<_components.strong>{"fall–then-rise"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're considering a venue: "}<_components.strong>{"\"chǎng...\""}</_components.strong>{" — that thoughtful dip-and-rise is the "}<_components.strong>{"third\ntone"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"场 (chǎng) - \"site; venue; field; court\""}</_components.li>{"\n"}<_components.li>{"场所 (chǎng suǒ) - \"place; venue\""}</_components.li>{"\n"}<_components.li>{"广场 (guǎng chǎng) - \"square; plaza\""}</_components.li>{"\n"}<_components.li>{"球场 (qiú chǎng) - \"sports field; court\""}</_components.li>{"\n"}<_components.li>{"机场 (jī chǎng) - \"airport\""}</_components.li>{"\n"}<_components.li>{"市场 (shì chǎng) - \"market\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of "}<_components.strong>{"场"}</_components.strong>{" (site/venue) like contemplating which place to go to — that's the "}<_components.strong>{"third tone"}</_components.strong>{"\nthoughtful quality!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
