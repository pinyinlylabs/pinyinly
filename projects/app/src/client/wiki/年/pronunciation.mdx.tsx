// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 年 (nián)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" nián"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"n"}</_components.strong>{" like "}<_components.strong>{"\"n\""}</_components.strong>{" in \"now\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ián"}</_components.strong>{" sounds like "}<_components.strong>{"\"yen\""}</_components.strong>{" but with rising tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"nián"}</_components.strong>{" sounds like "}<_components.strong>{"\"nyen\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip (Second tone: ˊ)"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" is a "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question:"}</_components.p>{"\n"}<_components.p>{"Say it like asking \"which "}<_components.strong>{"year"}</_components.strong>{"?\": "}<_components.strong>{"\"nián?\""}</_components.strong>{" — that rising, questioning tone is the "}<_components.strong>{"second\ntone"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"年 (nián) - \"year\""}</_components.li>{"\n"}<_components.li>{"今年 (jīn nián) - \"this year\""}</_components.li>{"\n"}<_components.li>{"去年 (qù nián) - \"last year\""}</_components.li>{"\n"}<_components.li>{"明年 (míng nián) - \"next year\""}</_components.li>{"\n"}<_components.li>{"新年 (xīn nián) - \"New Year\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of "}<_components.strong>{"年"}</_components.strong>{" as asking about which "}<_components.strong>{"year"}</_components.strong>{" with that rising, curious tone — that's the "}<_components.strong>{"second\ntone"}</_components.strong>{" quality!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
