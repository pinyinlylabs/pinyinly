// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 啡 (fēi)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" fēi"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: First tone"}</_components.strong>{" — "}<_components.strong>{"high and flat"}</_components.strong>{" tone, like a steady note: "}<_components.strong>{"\"Feee\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"f"}</_components.strong>{" like "}<_components.strong>{"\"f\""}</_components.strong>{" in \"fee\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ēi"}</_components.strong>{" sounds like "}<_components.strong>{"\"ay\""}</_components.strong>{" in \"way\", held steady and high"}</_components.li>{"\n"}<_components.li><_components.strong>{"fēi"}</_components.strong>{" sounds like "}<_components.strong>{"\"fay\""}</_components.strong>{" with a steady high pitch"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"first tone"}</_components.strong>{" (ˉ) is "}<_components.strong>{"high and level"}</_components.strong>{":"}</_components.p>{"\n"}<_components.p>{"Say it like naming an ingredient: "}<_components.strong>{"\"fēi\""}</_components.strong>{" — that steady, clear pronunciation."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"啡 (fēi) - appears mainly in compound words"}</_components.li>{"\n"}<_components.li>{"咖啡 (kā fēi) - \"coffee\""}</_components.li>{"\n"}<_components.li>{"吗啡 (mǎ fēi) - \"morphine\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔟 Special Note:"}</_components.strong></_components.p>{"\n"}<_components.p>{"啡 is "}<_components.strong>{"rarely used alone"}</_components.strong>{" in modern Chinese. It's almost always found as part of "}<_components.strong>{"咖啡 (coffee)"}</_components.strong>{"\nwhere it represents the second syllable of the borrowed word \"coffee.\""}</_components.p>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"mouth (口)"}</_components.strong>{" plus "}<_components.strong>{"非"}</_components.strong>{" — think of the "}<_components.strong>{"coffee"}</_components.strong>{" you drink through your mouth, making that\nsmooth \"fēi\" sound!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
