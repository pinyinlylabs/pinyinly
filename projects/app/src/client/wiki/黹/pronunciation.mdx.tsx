// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"üó£Ô∏è Pronunciation of Èªπ (zh«ê)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" zh«ê"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Third tone"}</_components.strong>{" ‚Äî "}<_components.strong>{"falling-rising"}</_components.strong>{" tone, like saying \"uh-huh\" when nodding"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"üî§ Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"zh"}</_components.strong>{" like "}<_components.strong>{"\"j\""}</_components.strong>{" in \"judge\" but with tongue curled back"}</_components.li>{"\n"}<_components.li><_components.strong>{"«ê"}</_components.strong>{" sounds like "}<_components.strong>{"\"ee\""}</_components.strong>{" in \"see\" but with third tone ‚Üí dip down and rise up"}</_components.li>{"\n"}<_components.li><_components.strong>{"zh«ê"}</_components.strong>{" sounds like "}<_components.strong>{"\"jee\""}</_components.strong>{" with a dip-then-rise, similar to \"gee\" but with the retroflex \"zh\"\nsound"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"üéß Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"third tone"}</_components.strong>{" (Àá) is a "}<_components.strong>{"fall‚Äìthen-rise"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're thoughtfully examining embroidery work: "}<_components.strong>{"\"zh«ê...\""}</_components.strong>{" ‚Äî that contemplative tone\npattern when appreciating detailed needlework."}</_components.p>{"\n"}<_components.p><_components.strong>{"üìù Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"Èªπ (zh«ê) - \"embroidery; needlework\""}</_components.li>{"\n"}<_components.li>{"ÈªπÂ∑• (zh«ê g≈çng) - \"embroidery work\""}</_components.li>{"\n"}<_components.li>{"ÈªπÁª£ (zh«ê xi√π) - \"embroidery and needlework\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"üí° Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Èªπ with its thoughtful third tone sounds like you're carefully examining delicate embroidery:\n"}<_components.strong>{"\"zh«ê...\""}</_components.strong>{" ‚Äî that appreciative, rising-falling tone when you notice intricate needlework details."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
