// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 旁 (páng)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" páng"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"p"}</_components.strong>{" like "}<_components.strong>{"\"p\""}</_components.strong>{" in \"park\""}</_components.li>{"\n"}<_components.li><_components.strong>{"áng"}</_components.strong>{" sounds like "}<_components.strong>{"\"ahng\""}</_components.strong>{" in \"hang\" but with second tone → rising tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"páng"}</_components.strong>{" sounds like "}<_components.strong>{"\"pahng?\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" (´) is a "}<_components.strong>{"rising"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're pointing to something beside you: "}<_components.strong>{"\"páng?\""}</_components.strong>{" — that rising tone suggests looking\nto the side!"}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"旁 (páng) - \"side, beside, next to\""}</_components.li>{"\n"}<_components.li>{"旁边 (páng biān) - \"beside, next to\""}</_components.li>{"\n"}<_components.li>{"路旁 (lù páng) - \"roadside\""}</_components.li>{"\n"}<_components.li>{"身旁 (shēn páng) - \"beside one's body, at one's side\""}</_components.li>{"\n"}<_components.li>{"旁人 (páng rén) - \"other people, bystanders\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"When you look to the "}<_components.strong>{"side"}</_components.strong>{", your voice naturally rises in curiosity — just like the rising second\ntone of "}<_components.strong>{"páng"}</_components.strong>{"!"}</_components.p>{"\n"}<_components.p><_components.strong>{"📍 Usage Note:"}</_components.strong></_components.p>{"\n"}<_components.p>{"旁 is commonly used to indicate location or position relative to something else, especially in the\ncompound 旁边 (beside)."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
