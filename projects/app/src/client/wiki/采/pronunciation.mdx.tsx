// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 采 (cǎi)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" cǎi"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Third tone"}</_components.strong>{" — "}<_components.strong>{"falling-rising"}</_components.strong>{" tone, like saying \"uh-huh\" when nodding"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"c"}</_components.strong>{" like "}<_components.strong>{"\"ts\""}</_components.strong>{" in \"cats\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ǎi"}</_components.strong>{" sounds like "}<_components.strong>{"\"eye\""}</_components.strong>{" but with third tone → dip down and rise up"}</_components.li>{"\n"}<_components.li><_components.strong>{"cǎi"}</_components.strong>{" sounds like "}<_components.strong>{"\"tseye\""}</_components.strong>{" with a dip-then-rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"third tone"}</_components.strong>{" (ˇ) is a "}<_components.strong>{"fall–then-rise"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're thoughtfully picking something: "}<_components.strong>{"\"cǎi...\""}</_components.strong>{" — that's the tone pattern of\n"}<_components.strong>{"cǎi"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"采 (cǎi) - \"to pick; to gather; to collect\""}</_components.li>{"\n"}<_components.li>{"采取 (cǎi qǔ) - \"to adopt; to take (measures)\""}</_components.li>{"\n"}<_components.li>{"采用 (cǎi yòng) - \"to adopt; to employ\""}</_components.li>{"\n"}<_components.li>{"采购 (cǎi gòu) - \"to purchase; to buy\""}</_components.li>{"\n"}<_components.li>{"采访 (cǎi fǎng) - \"to interview\""}</_components.li>{"\n"}<_components.li>{"采花 (cǎi huā) - \"to pick flowers\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Note:"}</_components.strong></_components.p>{"\n"}<_components.p>{"采 contains the 爪 (claw/hand) component on top, representing the action of picking or gathering\nwith hands. It's commonly used in contexts involving collection, selection, and adoption."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
