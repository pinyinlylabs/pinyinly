// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 孩 (hái)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" hái"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question: "}<_components.strong>{"\"Really?\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"h"}</_components.strong>{" like "}<_components.strong>{"\"h\""}</_components.strong>{" in \"hat\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ái"}</_components.strong>{" sounds like "}<_components.strong>{"\"eye\""}</_components.strong>{" but with a rising tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"hái"}</_components.strong>{" sounds like "}<_components.strong>{"\"hi?\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" (ˊ) is "}<_components.strong>{"rising like a question"}</_components.strong>{":"}</_components.p>{"\n"}<_components.p>{"Start "}<_components.strong>{"low and rise up"}</_components.strong>{" — like calling to a child with affection: "}<_components.strong>{"\"hái?\""}</_components.strong>{" — that's the warm,\nrising second tone."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"孩 (hái) - \"child\""}</_components.li>{"\n"}<_components.li>{"孩子 (hái zi) - \"child; kid\""}</_components.li>{"\n"}<_components.li>{"小孩 (xiǎo hái) - \"small child\""}</_components.li>{"\n"}<_components.li>{"女孩 (nǚ hái) - \"girl\""}</_components.li>{"\n"}<_components.li>{"男孩 (nán hái) - \"boy\""}</_components.li>{"\n"}<_components.li>{"孩童 (hái tóng) - \"children\" (formal)"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The second tone's rising pattern is like affectionately calling to a "}<_components.strong>{"child"}</_components.strong>{" — that warm,\nquestioning rise shows care and attention!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
