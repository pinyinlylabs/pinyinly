// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 套 (tào)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" tào"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Fourth tone"}</_components.strong>{" — sharp "}<_components.strong>{"falling"}</_components.strong>{" tone, like giving a command"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"t"}</_components.strong>{" like "}<_components.strong>{"\"t\""}</_components.strong>{" in \"top\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ào"}</_components.strong>{" sounds like "}<_components.strong>{"\"ow\""}</_components.strong>{" in \"how\", but with fourth tone → sharp falling pitch"}</_components.li>{"\n"}<_components.li><_components.strong>{"tào"}</_components.strong>{" sounds like "}<_components.strong>{"\"tow!\""}</_components.strong>{" with a sharp drop"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"fourth tone"}</_components.strong>{" (ˋ) is a "}<_components.strong>{"sharp falling"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're making a firm statement: "}<_components.strong>{"\"tào!\""}</_components.strong>{" — that's the decisive drop of the "}<_components.strong>{"fourth\ntone"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"套 (tào) - \"set, suit\""}</_components.li>{"\n"}<_components.li>{"一套 (yī tào) - \"one set\""}</_components.li>{"\n"}<_components.li>{"套房 (tào fáng) - \"suite\""}</_components.li>{"\n"}<_components.li>{"套装 (tào zhuāng) - \"suit (clothing)\""}</_components.li>{"\n"}<_components.li>{"全套 (quán tào) - \"complete set\""}</_components.li>{"\n"}<_components.li>{"手套 (shǒu tào) - \"gloves\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Special Notes:"}</_components.strong></_components.p>{"\n"}<_components.p>{"套 is commonly used as a measure word for sets or collections of things. It can refer to clothing\nsets, apartment suites, complete collections, or matching items. It's also used in the word for\ngloves (手套), literally meaning \"hand covers.\""}</_components.p>{"\n"}<_components.p><_components.strong>{"📍 Usage as Measure Word:"}</_components.strong></_components.p>{"\n"}<_components.p>{"套 is frequently used as a measure word: 一套书 (a set of books), 两套衣服 (two sets of\nclothes), 三套房子 (three apartments/suites)."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
