// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 啤 (pí)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" pí"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"p"}</_components.strong>{" like "}<_components.strong>{"\"p\""}</_components.strong>{" in \"pea\" (unaspirated, softer than English \"p\")"}</_components.li>{"\n"}<_components.li><_components.strong>{"í"}</_components.strong>{" sounds like "}<_components.strong>{"\"ee\""}</_components.strong>{" in \"see\", but with rising tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"pí"}</_components.strong>{" sounds like "}<_components.strong>{"\"pee?\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" (ˊ) is a "}<_components.strong>{"rising"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're asking about a drink: "}<_components.strong>{"\"pí?\""}</_components.strong>{" — that rising intonation fits perfectly."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"啤 (pí) - appears mainly in compound words"}</_components.li>{"\n"}<_components.li>{"啤酒 (pí jiǔ) - \"beer\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔟 Special Note:"}</_components.strong></_components.p>{"\n"}<_components.p>{"啤 is "}<_components.strong>{"rarely used alone"}</_components.strong>{" in modern Chinese. It's almost exclusively found in "}<_components.strong>{"啤酒 (beer)"}</_components.strong>{"\nwhere it represents the first syllable of the borrowed word \"beer.\""}</_components.p>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"mouth (口)"}</_components.strong>{" plus "}<_components.strong>{"卑"}</_components.strong>{" — when you taste "}<_components.strong>{"beer"}</_components.strong>{", you might make that rising \"pí?\" sound of\npleasant surprise!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
