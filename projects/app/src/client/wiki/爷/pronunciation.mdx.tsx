// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 爷 (ye)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" ye"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Light/Neutral tone"}</_components.strong>{" — "}<_components.strong>{"no specific tone"}</_components.strong>{", said quickly and lightly"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"y"}</_components.strong>{" like "}<_components.strong>{"\"y\""}</_components.strong>{" in \"yes\""}</_components.li>{"\n"}<_components.li><_components.strong>{"e"}</_components.strong>{" sounds like "}<_components.strong>{"\"uh\""}</_components.strong>{" in \"duh\" but said quickly and lightly"}</_components.li>{"\n"}<_components.li><_components.strong>{"ye"}</_components.strong>{" sounds like "}<_components.strong>{"\"yuh\""}</_components.strong>{" said quickly without emphasis"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"neutral tone"}</_components.strong>{" (no tone mark) is "}<_components.strong>{"light and quick"}</_components.strong>{":"}</_components.p>{"\n"}<_components.p>{"Say it like you're casually calling \"Grandpa\" in a relaxed way — "}<_components.strong>{"\"ye\""}</_components.strong>{" — that light, unstressed\npronunciation is the neutral tone pattern."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"爷 (ye) - \"grandfather; grandpa\""}</_components.li>{"\n"}<_components.li>{"爷爷 (yé ye) - \"grandfather\" (the first 爷 has second tone, second is neutral)"}</_components.li>{"\n"}<_components.li>{"大爷 (dà ye) - \"uncle; old man\" (respectful address)"}</_components.li>{"\n"}<_components.li>{"老爷 (lǎo ye) - \"master; sir\" (old-fashioned)"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Special Note:"}</_components.strong></_components.p>{"\n"}<_components.p>{"In 爷爷 (grandfather), the first 爷 is pronounced "}<_components.strong>{"yé"}</_components.strong>{" (second tone) and the second 爷 is "}<_components.strong>{"ye"}</_components.strong>{"\n(neutral tone)."}</_components.p>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"When calling grandpa informally, you say it lightly and casually — just like the neutral tone\npattern in 爷!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
