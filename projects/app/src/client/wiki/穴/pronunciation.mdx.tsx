// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 穴 (xué)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" xué"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"x"}</_components.strong>{" like "}<_components.strong>{"\"sh\""}</_components.strong>{" in \"shoe\" but with tongue tip curled back slightly"}</_components.li>{"\n"}<_components.li><_components.strong>{"ué"}</_components.strong>{" sounds like "}<_components.strong>{"\"eh\""}</_components.strong>{" but with second tone → rise up"}</_components.li>{"\n"}<_components.li><_components.strong>{"xué"}</_components.strong>{" sounds like "}<_components.strong>{"\"shweh\""}</_components.strong>{" with a rising tone, like asking \"what?\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" (´) is a "}<_components.strong>{"rising"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're asking: "}<_components.strong>{"\"xué?\""}</_components.strong>{" — that's the questioning rise of "}<_components.strong>{"xué"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"穴 (xué) - \"hole; cave; den\""}</_components.li>{"\n"}<_components.li>{"洞穴 (dòng xué) - \"cave\""}</_components.li>{"\n"}<_components.li>{"穴位 (xué wèi) - \"acupuncture point\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Cultural Note:"}</_components.strong></_components.p>{"\n"}<_components.p>{"穴 is the radical for \"cave\" or \"hole\" and appears in characters related to cavities, dens, or\nhollow spaces. It's also important in traditional Chinese medicine, where 穴位 refers to acupuncture\npoints on the body."}</_components.p>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The rising tone sounds like you're "}<_components.strong>{"peering into a hole"}</_components.strong>{" and asking \"What's down there?\" — perfect\nfor the meaning of 穴."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
