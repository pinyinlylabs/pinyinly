// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 坏 (huài)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" huài"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Fourth tone"}</_components.strong>{" — sharp "}<_components.strong>{"falling"}</_components.strong>{" tone, like giving a command: "}<_components.strong>{"\"Bad!\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"h"}</_components.strong>{" like "}<_components.strong>{"\"h\""}</_components.strong>{" in \"hat\""}</_components.li>{"\n"}<_components.li><_components.strong>{"uài"}</_components.strong>{" sounds like "}<_components.strong>{"\"why\""}</_components.strong>{", but with fourth tone → sharp drop"}</_components.li>{"\n"}<_components.li><_components.strong>{"huài"}</_components.strong>{" sounds like "}<_components.strong>{"\"hwy!\""}</_components.strong>{" with a sharp fall"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"fourth tone"}</_components.strong>{" (ˋ) starts "}<_components.strong>{"high"}</_components.strong>{" and drops "}<_components.strong>{"fast"}</_components.strong>{":"}</_components.p>{"\n"}<_components.p>{"Say it like you're declaring something is bad: "}<_components.strong>{"\"huài!\""}</_components.strong>{" — that's the falling tone of "}<_components.strong>{"huài"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"坏 (huài) - \"bad; broken; spoiled\""}</_components.li>{"\n"}<_components.li>{"坏人 (huài rén) - \"bad person\""}</_components.li>{"\n"}<_components.li>{"坏事 (huài shì) - \"bad thing; trouble\""}</_components.li>{"\n"}<_components.li>{"破坏 (pò huài) - \"destroy; damage\""}</_components.li>{"\n"}<_components.li>{"坏掉 (huài diào) - \"broken; spoiled\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of "}<_components.strong>{"坏"}</_components.strong>{" (bad) like firmly declaring something is wrong: "}<_components.strong>{"\"huài!\""}</_components.strong>{" — that's the "}<_components.strong>{"fourth\ntone"}</_components.strong>{" decisive judgment!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
