// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 连 (lián)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" lián"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"l"}</_components.strong>{" like "}<_components.strong>{"\"l\""}</_components.strong>{" in \"light\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ián"}</_components.strong>{" sounds like "}<_components.strong>{"\"yen\""}</_components.strong>{" but with a rising tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"lián"}</_components.strong>{" sounds like "}<_components.strong>{"\"lee-yen\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" (´) is a "}<_components.strong>{"rising"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Start low and rise up, like saying "}<_components.strong>{"\"What?\""}</_components.strong>{" when surprised: "}<_components.strong>{"\"lián?\""}</_components.strong>{" — that's the tone pattern\nof "}<_components.strong>{"lián"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"连 (lián) - \"link; connect\""}</_components.li>{"\n"}<_components.li>{"连接 (lián jiē) - \"to connect\""}</_components.li>{"\n"}<_components.li>{"连续 (lián xù) - \"continuous\""}</_components.li>{"\n"}<_components.li>{"连忙 (lián máng) - \"hastily\""}</_components.li>{"\n"}<_components.li>{"连环 (lián huán) - \"chain; series\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of 连 as "}<_components.strong>{"linking"}</_components.strong>{" things together — the rising tone connects the beginning to a higher end,\njust like linking!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
