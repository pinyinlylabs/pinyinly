// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 邮 (yóu)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" yóu"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"y"}</_components.strong>{" like "}<_components.strong>{"\"y\""}</_components.strong>{" in \"yes\""}</_components.li>{"\n"}<_components.li><_components.strong>{"óu"}</_components.strong>{" sounds like "}<_components.strong>{"\"oh\""}</_components.strong>{" but with second tone → rising pitch"}</_components.li>{"\n"}<_components.li><_components.strong>{"yóu"}</_components.strong>{" sounds like "}<_components.strong>{"\"yo?\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" (´) is a "}<_components.strong>{"rising"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Start mid-pitch and rise up, like asking \"Really?\" curiously: "}<_components.strong>{"\"yóu?\""}</_components.strong>{" — that's the tone pattern\nof "}<_components.strong>{"yóu"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"邮 (yóu) - \"postal; mail\""}</_components.li>{"\n"}<_components.li>{"邮件 (yóu jiàn) - \"email; mail\""}</_components.li>{"\n"}<_components.li>{"邮票 (yóu piào) - \"postage stamp\""}</_components.li>{"\n"}<_components.li>{"邮箱 (yóu xiāng) - \"mailbox; email inbox\""}</_components.li>{"\n"}<_components.li>{"邮局 (yóu jú) - \"post office\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Note:"}</_components.strong></_components.p>{"\n"}<_components.p>{"邮 is commonly used in modern contexts related to postal services and electronic mail. The character\ncontains the 邑 radical, indicating its connection to places and services."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
