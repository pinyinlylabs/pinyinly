// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 死 (sǐ)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" sǐ"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Third tone"}</_components.strong>{" — "}<_components.strong>{"falling-rising"}</_components.strong>{" tone, like saying \"uh-huh\" when nodding"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"s"}</_components.strong>{" like "}<_components.strong>{"\"s\""}</_components.strong>{" in \"see\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ǐ"}</_components.strong>{" sounds like "}<_components.strong>{"\"uh\""}</_components.strong>{" with third tone → dip down and rise up"}</_components.li>{"\n"}<_components.li><_components.strong>{"sǐ"}</_components.strong>{" sounds like "}<_components.strong>{"\"suh\""}</_components.strong>{" with a dip-then-rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"third tone"}</_components.strong>{" (ˇ) is a "}<_components.strong>{"fall–then-rise"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're contemplating mortality: "}<_components.strong>{"\"sǐ...\""}</_components.strong>{" — that thoughtful dip-then-rise pattern."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"死了 (sǐ le) - \"died; dead\""}</_components.li>{"\n"}<_components.li>{"生死 (shēng sǐ) - \"life and death\""}</_components.li>{"\n"}<_components.li>{"死亡 (sǐ wáng) - \"death; to die\""}</_components.li>{"\n"}<_components.li>{"死人 (sǐ rén) - \"dead person\""}</_components.li>{"\n"}<_components.li>{"该死 (gāi sǐ) - \"damn it!\" (curse word)"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Character Structure:"}</_components.strong></_components.p>{"\n"}<_components.p>{"死 contains the 歹 (dǎi) radical, which represents \"death/evil,\" plus 匕 (bǐ) meaning \"dagger.\"\nTogether they form the concept of death."}</_components.p>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"死 means \"die\" — contemplate it with that "}<_components.strong>{"thoughtful dip-and-rise"}</_components.strong>{" tone, reflecting the gravity\nof the concept!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
