// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 永 (yǒng)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" yǒng"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Third tone"}</_components.strong>{" — "}<_components.strong>{"falling-rising"}</_components.strong>{" tone, like saying \"uh-huh\" when nodding"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"y"}</_components.strong>{" like "}<_components.strong>{"\"y\""}</_components.strong>{" in \"yes\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ǒng"}</_components.strong>{" sounds like "}<_components.strong>{"\"ong\""}</_components.strong>{" in \"wrong\" but with third tone → dip down and rise up"}</_components.li>{"\n"}<_components.li><_components.strong>{"yǒng"}</_components.strong>{" sounds like "}<_components.strong>{"\"young\""}</_components.strong>{" with a dip-then-rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎯 Mastering the \"ong\" final:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"ong"}</_components.strong>{" ending is a "}<_components.strong>{"nasal final"}</_components.strong>{" with a back vowel:"}</_components.p>{"\n"}<_components.ol>{"\n"}<_components.li><_components.strong>{"Start with \"o\""}</_components.strong>{" like in \"or\" (but shorter)"}</_components.li>{"\n"}<_components.li><_components.strong>{"Add the \"ng\""}</_components.strong>{" sound like at the end of \"song\""}</_components.li>{"\n"}<_components.li><_components.strong>{"Keep the vowel round"}</_components.strong>{" — lips slightly rounded"}</_components.li>{"\n"}<_components.li><_components.strong>{"Let the \"ng\" resonate"}</_components.strong>{" in the back of your mouth"}</_components.li>{"\n"}</_components.ol>{"\n"}<_components.p><_components.strong>{"Common mistakes:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"❌ \"yong\" with flat tone — needs the falling-rising tone"}</_components.li>{"\n"}<_components.li>{"❌ \"young\" like English — the vowel should be more \"oh\" than \"uh\""}</_components.li>{"\n"}<_components.li>{"❌ Missing the \"ng\" nasal sound — should end with a clear \"ng\""}</_components.li>{"\n"}<_components.li>{"✅ \"yǒng\" — \"y\" + round \"oh\" + \"ng\" + third tone dip-rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"third tone"}</_components.strong>{" (ˇ) is "}<_components.strong>{"fall–then-rise"}</_components.strong>{":"}</_components.p>{"\n"}<_components.p>{"Start "}<_components.strong>{"mid-low, dip down, then rise up"}</_components.strong>{" — like being thoughtful: "}<_components.strong>{"\"yǒng...\""}</_components.strong></_components.p>{"\n"}<_components.p><_components.strong>{"📝 Practice words:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"永远 (yǒng yuǎn) - \"forever\""}</_components.li>{"\n"}<_components.li>{"永久 (yǒng jiǔ) - \"permanent\""}</_components.li>{"\n"}<_components.li>{"永不 (yǒng bù) - \"never\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of something that lasts "}<_components.strong>{"\"young\""}</_components.strong>{" forever — but say it with that thoughtful, falling-rising\ntone like you're contemplating eternity!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
