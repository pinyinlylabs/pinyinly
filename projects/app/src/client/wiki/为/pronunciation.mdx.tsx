// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 为"}</_components.strong></_components.p>{"\n"}<_components.p>{"为 has "}<_components.strong>{"two different pronunciations"}</_components.strong>{" depending on its meaning:"}</_components.p>{"\n"}<_components.p><_components.strong>{"📍 wéi (second tone) - \"become; act as\""}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" wéi"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question: "}<_components.strong>{"\"Really?\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"w"}</_components.strong>{" like "}<_components.strong>{"\"w\""}</_components.strong>{" in \"way\""}</_components.li>{"\n"}<_components.li><_components.strong>{"éi"}</_components.strong>{" sounds like "}<_components.strong>{"\"ay\""}</_components.strong>{" in \"way\" but with rising tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"wéi"}</_components.strong>{" sounds like "}<_components.strong>{"\"way?\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"📍 wèi (fourth tone) - \"for; because of\""}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" wèi"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Fourth tone"}</_components.strong>{" — "}<_components.strong>{"falling"}</_components.strong>{" tone, like stating a purpose: "}<_components.strong>{"\"For this!\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"w"}</_components.strong>{" like "}<_components.strong>{"\"w\""}</_components.strong>{" in \"way\" (same as above)"}</_components.li>{"\n"}<_components.li><_components.strong>{"èi"}</_components.strong>{" sounds like "}<_components.strong>{"\"ay\""}</_components.strong>{" but with sharp falling tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"wèi"}</_components.strong>{" sounds like "}<_components.strong>{"\"way!\""}</_components.strong>{" with definitive drop"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎯 Mastering the \"w\" sound:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"w"}</_components.strong>{" is straightforward - exactly like English:"}</_components.p>{"\n"}<_components.ol>{"\n"}<_components.li><_components.strong>{"Round your lips"}</_components.strong>{" like saying \"oo\""}</_components.li>{"\n"}<_components.li><_components.strong>{"Quickly transition"}</_components.strong>{" to the following vowel"}</_components.li>{"\n"}<_components.li><_components.strong>{"Same as English \"w\""}</_components.strong>{" in \"way\" or \"we\""}</_components.li>{"\n"}</_components.ol>{"\n"}<_components.p><_components.strong>{"🎯 Mastering the \"éi/èi\" final:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"ei"}</_components.strong>{" diphthong is consistent, only the tone changes:"}</_components.p>{"\n"}<_components.ol>{"\n"}<_components.li><_components.strong>{"Start with \"eh\""}</_components.strong>{" like in \"bed\" (but shorter)"}</_components.li>{"\n"}<_components.li><_components.strong>{"Glide to \"ee\""}</_components.strong>{" like in \"see\""}</_components.li>{"\n"}<_components.li><_components.strong>{"Blend smoothly"}</_components.strong>{" — one fluid sound"}</_components.li>{"\n"}<_components.li><_components.strong>{"Apply the correct tone"}</_components.strong>{" throughout the glide"}</_components.li>{"\n"}</_components.ol>{"\n"}<_components.p><_components.strong>{"🎧 Tone comparison:"}</_components.strong></_components.p>{"\n"}<_components.p><_components.strong>{"wéi (rising):"}</_components.strong>{" Like asking "}<_components.strong>{"\"Become what?\""}</_components.strong>{" — curious, questioning "}<_components.strong>{"wèi (falling):"}</_components.strong>{" Like\ndeclaring "}<_components.strong>{"\"For this purpose!\""}</_components.strong>{" — definitive, purposeful"}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Usage Guide:"}</_components.strong></_components.p>{"\n"}<_components.p><_components.strong>{"为 (wéi) - \"become; act as\":"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"成"}<_components.strong>{"为"}</_components.strong>{" (chéng wéi) - \"become\""}</_components.li>{"\n"}<_components.li><_components.strong>{"为"}</_components.strong>{"了什么 (wéi le shén me) - \"for what reason\""}</_components.li>{"\n"}<_components.li>{"人"}<_components.strong>{"为"}</_components.strong>{" (rén wéi) - \"artificial; man-made\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"为 (wèi) - \"for; because of\":"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"为"}</_components.strong>{"了 (wèi le) - \"in order to; for\""}</_components.li>{"\n"}<_components.li><_components.strong>{"为"}</_components.strong>{"什么 (wèi shén me) - \"why; for what reason\""}</_components.li>{"\n"}<_components.li><_components.strong>{"为"}</_components.strong>{"你 (wèi nǐ) - \"for you\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of "}<_components.strong>{"wéi"}</_components.strong>{" (rising) as asking about transformation: "}<_components.strong>{"\"Become?\""}</_components.strong>{" Think of "}<_components.strong>{"wèi"}</_components.strong>{" (falling)\nas stating purpose firmly: "}<_components.strong>{"\"For this!\""}</_components.strong></_components.p>{"\n"}<_components.p><_components.strong>{"Common mistakes:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"❌ Using wrong tone for the meaning"}</_components.li>{"\n"}<_components.li>{"❌ \"way\" with flat English tone — needs Chinese tones"}</_components.li>{"\n"}<_components.li>{"✅ Match the tone to the meaning: rising for \"become\", falling for \"for\""}</_components.li>{"\n"}</_components.ul></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
