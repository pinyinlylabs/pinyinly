// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 尸 (shī)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" shī"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: First tone"}</_components.strong>{" — "}<_components.strong>{"high and flat"}</_components.strong>{" tone, like a steady whistle: "}<_components.strong>{"\"Sheee\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"sh"}</_components.strong>{" like "}<_components.strong>{"\"sh\""}</_components.strong>{" in \"she\" but with tongue tip curled back slightly"}</_components.li>{"\n"}<_components.li><_components.strong>{"ī"}</_components.strong>{" sounds like "}<_components.strong>{"\"ee\""}</_components.strong>{" in \"see\" but held steady and high"}</_components.li>{"\n"}<_components.li><_components.strong>{"shī"}</_components.strong>{" sounds like "}<_components.strong>{"\"she\""}</_components.strong>{" with a steady high pitch"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎯 Mastering the Chinese \"sh\" sound:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"sh"}</_components.strong>{" in Chinese is "}<_components.strong>{"slightly different"}</_components.strong>{" from English:"}</_components.p>{"\n"}<_components.ol>{"\n"}<_components.li><_components.strong>{"Start with English \"sh\""}</_components.strong>{" — like in \"shoe\""}</_components.li>{"\n"}<_components.li><_components.strong>{"Curl tongue back slightly"}</_components.strong>{" — tip pointing toward roof of mouth"}</_components.li>{"\n"}<_components.li><_components.strong>{"Make it a bit deeper"}</_components.strong>{" — more resonant than English \"sh\""}</_components.li>{"\n"}<_components.li><_components.strong>{"Keep it soft"}</_components.strong>{" — not harsh or hissing"}</_components.li>{"\n"}</_components.ol>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"first tone"}</_components.strong>{" (ˉ) is "}<_components.strong>{"high and steady"}</_components.strong>{":"}</_components.p>{"\n"}<_components.p>{"Stay "}<_components.strong>{"high and flat"}</_components.strong>{" throughout — like humming a single note. No rising or falling, just maintain\nthe high pitch."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"尸 (shī) - \"corpse; body\" (mostly used as a radical in other characters)"}</_components.li>{"\n"}<_components.li>{"尸体 (shī tǐ) - \"corpse; dead body\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"📚 Note on Usage:"}</_components.strong></_components.p>{"\n"}<_components.p>{"尸 is primarily used as a radical (部首) in Chinese characters rather than as a standalone word in\nmodern Chinese. It appears in characters like:"}</_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"居 (jū) - \"live; reside\""}</_components.li>{"\n"}<_components.li>{"屋 (wū) - \"house\""}</_components.li>{"\n"}<_components.li>{"展 (zhǎn) - \"open; display\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The high, flat tone sounds like a steady, solemn tone — appropriate for the serious meaning of this\ncharacter."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
