// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 咱 (zán)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" zán"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"z"}</_components.strong>{" like "}<_components.strong>{"\"ds\""}</_components.strong>{" in \"adds\", but as a single sound"}</_components.li>{"\n"}<_components.li><_components.strong>{"án"}</_components.strong>{" sounds like "}<_components.strong>{"\"ahn\""}</_components.strong>{" but with a rising tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"zán"}</_components.strong>{" sounds like "}<_components.strong>{"\"dzahn?\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" (ˊ) is a "}<_components.strong>{"rising"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're asking a question: "}<_components.strong>{"\"zán?\""}</_components.strong>{" — let your voice rise at the end."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"咱 (zán) - \"we; us\" (inclusive)"}</_components.li>{"\n"}<_components.li>{"咱们 (zán men) - \"we; us\" (inclusive)"}</_components.li>{"\n"}<_components.li>{"咱家 (zán jiā) - \"our family/home\""}</_components.li>{"\n"}<_components.li>{"咱俩 (zán liǎ) - \"we two; both of us\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Usage Note:"}</_components.strong></_components.p>{"\n"}<_components.p>{"咱 (zán) is more "}<_components.strong>{"colloquial and inclusive"}</_components.strong>{" than 我们 (wǒ men):"}</_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"咱们"}</_components.strong>{" includes the listener (\"we\" including you)"}</_components.li>{"\n"}<_components.li><_components.strong>{"我们"}</_components.strong>{" may or may not include the listener (\"we\" possibly excluding you)"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p>{"咱 is commonly used in northern China dialects and casual speech."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
