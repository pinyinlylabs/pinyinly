// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 都 (dōu)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" dōu"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: First tone"}</_components.strong>{" — "}<_components.strong>{"high and flat"}</_components.strong>{" tone, like a steady note"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"d"}</_components.strong>{" like "}<_components.strong>{"\"d\""}</_components.strong>{" in \"do\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ōu"}</_components.strong>{" sounds like "}<_components.strong>{"\"oh\""}</_components.strong>{" but with first tone → steady high pitch"}</_components.li>{"\n"}<_components.li><_components.strong>{"dōu"}</_components.strong>{" sounds like "}<_components.strong>{"\"doh\""}</_components.strong>{" with a steady high tone"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"first tone"}</_components.strong>{" (ˉ) is a "}<_components.strong>{"high and flat"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Keep it steady and high, like singing a sustained note: "}<_components.strong>{"\"dōu\""}</_components.strong>{" — that's the tone pattern of\n"}<_components.strong>{"dōu"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"都 (dōu) - \"all; both; entirely\""}</_components.li>{"\n"}<_components.li>{"都是 (dōu shì) - \"all are; both are\""}</_components.li>{"\n"}<_components.li>{"都有 (dōu yǒu) - \"all have\""}</_components.li>{"\n"}<_components.li>{"都会 (dōu huì) - \"all can; everyone can\""}</_components.li>{"\n"}<_components.li>{"我们都 (wǒ men dōu) - \"all of us\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Special Note:"}</_components.strong></_components.p>{"\n"}<_components.p>{"都 has two pronunciations:"}</_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"都 (dōu)"}</_components.strong>{" - \"all; both\" (first tone) - more common"}</_components.li>{"\n"}<_components.li><_components.strong>{"都 (dū)"}</_components.strong>{" - \"capital city\" (first tone) as in 首都 (shǒu dū) \"capital\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p>{"The pronunciation in this context focuses on the \"all\" meaning."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
