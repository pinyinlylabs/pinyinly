// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 矛 (máo)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" máo"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question: "}<_components.strong>{"\"Really?\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"m"}</_components.strong>{" like "}<_components.strong>{"\"m\""}</_components.strong>{" in \"me\""}</_components.li>{"\n"}<_components.li><_components.strong>{"áo"}</_components.strong>{" sounds like "}<_components.strong>{"\"ow\""}</_components.strong>{" in \"cow\" but with a rising tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"máo"}</_components.strong>{" sounds like "}<_components.strong>{"\"mow?\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" (ˊ) is a "}<_components.strong>{"rising"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're questioning: "}<_components.strong>{"\"máo?\""}</_components.strong>{" — that's the rising tone pattern of "}<_components.strong>{"máo"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"矛 (máo) - \"spear; lance\""}</_components.li>{"\n"}<_components.li>{"矛盾 (máo dùn) - \"contradiction\" (literally \"spear and shield\")"}</_components.li>{"\n"}<_components.li>{"长矛 (cháng máo) - \"long spear; pike\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of "}<_components.strong>{"\"mow?\""}</_components.strong>{" with a questioning rise — when someone mentions a "}<_components.strong>{"spear"}</_components.strong>{", you might ask\n\"máo?\" to confirm what weapon they're talking about!"}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Cultural Note:"}</_components.strong></_components.p>{"\n"}<_components.p>{"矛 is most commonly seen in the phrase 矛盾 (máo dùn), which literally means \"spear and shield\" but\nfiguratively means \"contradiction\" — from an ancient story about a merchant who claimed to sell both\nan unstoppable spear and an impenetrable shield."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
