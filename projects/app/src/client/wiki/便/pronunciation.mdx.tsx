// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 便 (biàn)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" biàn"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Fourth tone"}</_components.strong>{" — sharp "}<_components.strong>{"falling"}</_components.strong>{" tone, like giving a command"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"b"}</_components.strong>{" like "}<_components.strong>{"\"b\""}</_components.strong>{" in \"ball\""}</_components.li>{"\n"}<_components.li><_components.strong>{"iàn"}</_components.strong>{" sounds like "}<_components.strong>{"\"yen\""}</_components.strong>{" in \"yen\", but with fourth tone → sharp falling"}</_components.li>{"\n"}<_components.li><_components.strong>{"biàn"}</_components.strong>{" sounds like "}<_components.strong>{"\"byen!\""}</_components.strong>{" with a sharp drop"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"fourth tone"}</_components.strong>{" (`) is a "}<_components.strong>{"sharp falling"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like giving a firm command: "}<_components.strong>{"\"biàn!\""}</_components.strong>{" — that's the tone pattern of "}<_components.strong>{"biàn"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"便 (biàn) - \"convenient; then\""}</_components.li>{"\n"}<_components.li>{"方便 (fāng biàn) - \"convenient\""}</_components.li>{"\n"}<_components.li>{"便宜 (pián yi) - \"cheap; inexpensive\""}</_components.li>{"\n"}<_components.li>{"便是 (biàn shì) - \"that is; namely\""}</_components.li>{"\n"}<_components.li>{"方便面 (fāng biàn miàn) - \"instant noodles\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"📝 Special Note:"}</_components.strong></_components.p>{"\n"}<_components.p>{"便 has two main pronunciations:"}</_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"便 (biàn)"}</_components.strong>{" - \"convenient; then\" (fourth tone)"}</_components.li>{"\n"}<_components.li><_components.strong>{"便 (pián)"}</_components.strong>{" - used in 便宜 (pián yi) \"cheap\" (second tone)"}</_components.li>{"\n"}</_components.ul></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
