// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 于 (yú)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" yú"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question: "}<_components.strong>{"\"Really?\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"y"}</_components.strong>{" like "}<_components.strong>{"\"y\""}</_components.strong>{" in \"yes\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ú"}</_components.strong>{" sounds like "}<_components.strong>{"\"oo\""}</_components.strong>{" in \"book\" but with a rising tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"yú"}</_components.strong>{" sounds like "}<_components.strong>{"\"yoo?\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip (Second tone: ˊ)"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" is a "}<_components.strong>{"rising"}</_components.strong>{" tone, like when you're curious or asking:"}</_components.p>{"\n"}<_components.p>{"Say it like you're asking "}<_components.strong>{"\"Where?\""}</_components.strong>{" or showing interest: "}<_components.strong>{"\"yú?\""}</_components.strong>{" — that's the inquisitive\nenergy of "}<_components.strong>{"yú"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"于 (yú) - \"at; in; on\" (preposition)"}</_components.li>{"\n"}<_components.li>{"关于 (guān yú) - \"about; concerning\""}</_components.li>{"\n"}<_components.li>{"由于 (yóu yú) - \"due to; because of\""}</_components.li>{"\n"}<_components.li>{"对于 (duì yú) - \"as for; regarding\""}</_components.li>{"\n"}<_components.li>{"基于 (jī yú) - \"based on\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of "}<_components.strong>{"于"}</_components.strong>{" as pointing to a location with curiosity — that's the "}<_components.strong>{"second tone"}</_components.strong>{" questioning\nnature!"}</_components.p>{"\n"}<_components.p><_components.strong>{"📍 Usage Note:"}</_components.strong></_components.p>{"\n"}<_components.p>{"于 is primarily used as a preposition meaning \"at,\" \"in,\" or \"on\" in formal and written Chinese.\nIt's commonly seen in compound words and formal expressions."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
