// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 艹 (cǎo)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" cǎo"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Third tone"}</_components.strong>{" — "}<_components.strong>{"falling-rising"}</_components.strong>{" tone, like saying \"uh-huh\" when nodding"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"c"}</_components.strong>{" like "}<_components.strong>{"\"ts\""}</_components.strong>{" in \"cats\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ǎo"}</_components.strong>{" sounds like "}<_components.strong>{"\"ow\""}</_components.strong>{" but with third tone → dip down and rise up"}</_components.li>{"\n"}<_components.li><_components.strong>{"cǎo"}</_components.strong>{" sounds like "}<_components.strong>{"\"tsao\""}</_components.strong>{" with a dip-then-rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip (Third tone: ˇ)"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"third tone"}</_components.strong>{" is a "}<_components.strong>{"fall–then-rise"}</_components.strong>{" tone, like being thoughtful:"}</_components.p>{"\n"}<_components.p>{"Say it like you're thinking about grass: "}<_components.strong>{"\"cǎo...\""}</_components.strong>{" — that thoughtful dip-and-rise is the "}<_components.strong>{"third\ntone"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"艹 (cǎo) - \"grass radical\""}</_components.li>{"\n"}<_components.li>{"草 (cǎo) - \"grass\" (uses this radical)"}</_components.li>{"\n"}<_components.li>{"花 (huā) - \"flower\" (uses this radical)"}</_components.li>{"\n"}<_components.li>{"茶 (chá) - \"tea\" (uses this radical)"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of "}<_components.strong>{"艹"}</_components.strong>{" as the grass radical swaying in the wind — that up-and-down motion matches the\n"}<_components.strong>{"third tone"}</_components.strong>{"!"}</_components.p>{"\n"}<_components.p><_components.strong>{"📍 Special Note:"}</_components.strong></_components.p>{"\n"}<_components.p>{"艹 is the \"grass radical\" that appears at the top of many plant-related characters. When written at\nthe top of characters, it's often simplified to three short strokes (艹), but when standalone, it\ncan be written as 草."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
