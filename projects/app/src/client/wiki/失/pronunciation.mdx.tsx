// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 失 (shī)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" shī"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: First tone"}</_components.strong>{" — "}<_components.strong>{"high and flat"}</_components.strong>{" tone, like a steady note"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"sh"}</_components.strong>{" like "}<_components.strong>{"\"sh\""}</_components.strong>{" in \"shoe\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ī"}</_components.strong>{" sounds like "}<_components.strong>{"\"ee\""}</_components.strong>{" in \"see\", but with first tone → high and steady"}</_components.li>{"\n"}<_components.li><_components.strong>{"shī"}</_components.strong>{" sounds like "}<_components.strong>{"\"shee\""}</_components.strong>{" with a high, flat pitch"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"first tone"}</_components.strong>{" (¯) is a "}<_components.strong>{"high and flat"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're stating something clearly: "}<_components.strong>{"\"shī...\""}</_components.strong>{" — that's the steady, high pitch of the\n"}<_components.strong>{"first tone"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"失 (shī) - \"lose\" (often in compounds)"}</_components.li>{"\n"}<_components.li>{"失去 (shī qù) - \"to lose\""}</_components.li>{"\n"}<_components.li>{"失败 (shī bài) - \"to fail\""}</_components.li>{"\n"}<_components.li>{"失望 (shī wàng) - \"disappointed\""}</_components.li>{"\n"}<_components.li>{"丢失 (diū shī) - \"to lose (something)\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Special Notes:"}</_components.strong></_components.p>{"\n"}<_components.p>{"失 is rarely used alone in modern Chinese but is extremely common in compound words. It carries the\nmeaning of \"lose,\" \"miss,\" or \"fail\" and appears in many important vocabulary words related to loss,\nfailure, or disappointment."}</_components.p>{"\n"}<_components.p><_components.strong>{"📍 Usage Pattern:"}</_components.strong></_components.p>{"\n"}<_components.p>{"失 typically appears as the first character in compound words, where it modifies the meaning to\nindicate loss or failure of the concept that follows."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
