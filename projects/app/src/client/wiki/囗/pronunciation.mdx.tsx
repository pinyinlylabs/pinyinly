// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 囗 (wéi)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" wéi"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question: "}<_components.strong>{"\"Really?\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"w"}</_components.strong>{" like "}<_components.strong>{"\"w\""}</_components.strong>{" in \"way\""}</_components.li>{"\n"}<_components.li><_components.strong>{"éi"}</_components.strong>{" sounds like "}<_components.strong>{"\"ay\""}</_components.strong>{" in \"way\" but with a rising tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"wéi"}</_components.strong>{" sounds like "}<_components.strong>{"\"way?\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" (ˊ) is a "}<_components.strong>{"rising"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're asking about an enclosure: "}<_components.strong>{"\"wéi?\""}</_components.strong>{" — that's the tone pattern of "}<_components.strong>{"wéi"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"囗 (wéi) - \"enclosure\" (as a radical)"}</_components.li>{"\n"}<_components.li>{"Used as a component in characters like:"}{"\n"}<_components.ul>{"\n"}<_components.li>{"回 (huí) - \"return\""}</_components.li>{"\n"}<_components.li>{"因 (yīn) - \"cause\""}</_components.li>{"\n"}<_components.li>{"团 (tuán) - \"group\""}</_components.li>{"\n"}<_components.li>{"园 (yuán) - \"garden\""}</_components.li>{"\n"}</_components.ul>{"\n"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Special Notes:"}</_components.strong></_components.p>{"\n"}<_components.p>{"囗 is primarily used as a radical component in Chinese characters rather than as a standalone word.\nIt represents the concept of enclosure or surrounding. When you see this radical in characters, it\noften relates to something being enclosed, surrounded, or contained within boundaries. It's\ndifferent from 口 (kǒu, mouth) - note that 囗 is larger and more square-shaped."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
