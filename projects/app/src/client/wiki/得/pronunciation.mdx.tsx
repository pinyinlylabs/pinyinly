// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 得"}</_components.strong></_components.p>{"\n"}<_components.p>{"得 has "}<_components.strong>{"three different pronunciations"}</_components.strong>{" depending on its usage:"}</_components.p>{"\n"}<_components.p><_components.strong>{"📍 de (neutral tone) - complement particle"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" de (neutral tone)"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Neutral tone"}</_components.strong>{" — "}<_components.strong>{"light and quick"}</_components.strong>{", unstressed"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"d"}</_components.strong>{" like "}<_components.strong>{"\"d\""}</_components.strong>{" in \"day\""}</_components.li>{"\n"}<_components.li><_components.strong>{"e"}</_components.strong>{" sounds like "}<_components.strong>{"\"uh\""}</_components.strong>{" but very light and quick"}</_components.li>{"\n"}<_components.li><_components.strong>{"de"}</_components.strong>{" sounds like a quick "}<_components.strong>{"\"duh\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"📍 dé (second tone) - \"to get, to obtain\""}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" dé"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"d"}</_components.strong>{" like "}<_components.strong>{"\"d\""}</_components.strong>{" in \"day\""}</_components.li>{"\n"}<_components.li><_components.strong>{"é"}</_components.strong>{" sounds like "}<_components.strong>{"\"ay\""}</_components.strong>{" in \"day\" but with a rising tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"dé"}</_components.strong>{" sounds like "}<_components.strong>{"\"day?\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"📍 děi (third tone) - \"must, have to\""}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" děi"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Third tone"}</_components.strong>{" — "}<_components.strong>{"falling-rising"}</_components.strong>{" tone, like saying \"uh-huh\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"d"}</_components.strong>{" like "}<_components.strong>{"\"d\""}</_components.strong>{" in \"day\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ěi"}</_components.strong>{" sounds like "}<_components.strong>{"\"ay\""}</_components.strong>{" but with the third tone → dip down and rise up"}</_components.li>{"\n"}<_components.li><_components.strong>{"děi"}</_components.strong>{" sounds like "}<_components.strong>{"\"day\""}</_components.strong>{" with a dip-then-rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"📝 Usage Guide:"}</_components.strong></_components.p>{"\n"}<_components.p><_components.strong>{"得 (de) - complement particle (most common):"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"跑"}<_components.strong>{"得"}</_components.strong>{"很快 (pǎo de hěn kuài) - \"runs very fast\""}</_components.li>{"\n"}<_components.li>{"说"}<_components.strong>{"得"}</_components.strong>{"对 (shuō de duì) - \"said correctly\""}</_components.li>{"\n"}<_components.li>{"好"}<_components.strong>{"得"}</_components.strong>{"很 (hǎo de hěn) - \"very good\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"得 (dé) - \"to get, to obtain\":"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"得"}</_components.strong>{"到 (dé dào) - \"to get, to obtain\""}</_components.li>{"\n"}<_components.li><_components.strong>{"得"}</_components.strong>{"分 (dé fēn) - \"to score points\""}</_components.li>{"\n"}<_components.li>{"取"}<_components.strong>{"得"}</_components.strong>{" (qǔ dé) - \"to achieve\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"得 (děi) - \"must, have to\":"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"我"}<_components.strong>{"得"}</_components.strong>{"走了 (wǒ děi zǒu le) - \"I have to go\""}</_components.li>{"\n"}<_components.li><_components.strong>{"得"}</_components.strong>{"小心 (děi xiǎo xīn) - \"must be careful\""}</_components.li>{"\n"}<_components.li>{"这"}<_components.strong>{"得"}</_components.strong>{"花很多钱 (zhè děi huā hěn duō qián) - \"this will cost a lot of money\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p><_components.strong>{"de"}</_components.strong>{" = light grammatical connector (like -ly in \"quickly\") "}<_components.strong>{"dé"}</_components.strong>{" = \"get it!\" — obtaining\nsomething successfully "}<_components.strong>{"děi"}</_components.strong>{" = \"gotta\" — expressing necessity with emphasis"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
