// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 宜 (yí)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" yí"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"y"}</_components.strong>{" like "}<_components.strong>{"\"y\""}</_components.strong>{" in \"yes\""}</_components.li>{"\n"}<_components.li><_components.strong>{"í"}</_components.strong>{" sounds like "}<_components.strong>{"\"ee\""}</_components.strong>{" in \"see\" but with second tone → rising upward"}</_components.li>{"\n"}<_components.li><_components.strong>{"yí"}</_components.strong>{" sounds like "}<_components.strong>{"\"yee?\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" (ˊ) is a "}<_components.strong>{"rising"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're suggesting something suitable: "}<_components.strong>{"\"yí?\""}</_components.strong>{" — that's the rising tone pattern of\n"}<_components.strong>{"yí"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"宜 (yí) - \"suitable; appropriate; should\""}</_components.li>{"\n"}<_components.li>{"便宜 (pián yi) - \"cheap; inexpensive\""}</_components.li>{"\n"}<_components.li>{"不宜 (bù yí) - \"not suitable; inadvisable\""}</_components.li>{"\n"}<_components.li>{"适宜 (shì yí) - \"suitable; appropriate\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"📍 Usage Note:"}</_components.strong></_components.p>{"\n"}<_components.p>{"宜 is often used in formal or written Chinese to indicate what is appropriate or suitable. It's\ncommonly seen in signs, instructions, and formal recommendations."}</_components.p>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p><_components.strong>{"Suitable"}</_components.strong>{" — the rising second tone is like raising a suggestion about what's "}<_components.strong>{"appropriate"}</_components.strong>{"!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
