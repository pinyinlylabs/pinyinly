// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 尽 (jǐn)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" jǐn"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Third tone"}</_components.strong>{" — "}<_components.strong>{"falling-rising"}</_components.strong>{" tone, like thoughtfully saying \"hmm...\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"j"}</_components.strong>{" like "}<_components.strong>{"\"j\""}</_components.strong>{" in \"jeep\" but softer, more like \"gee\" without the \"g\" sound"}</_components.li>{"\n"}<_components.li><_components.strong>{"ǐn"}</_components.strong>{" sounds like "}<_components.strong>{"\"een\""}</_components.strong>{" with the falling-rising tone pattern"}</_components.li>{"\n"}<_components.li><_components.strong>{"jǐn"}</_components.strong>{" sounds like "}<_components.strong>{"\"jeen\""}</_components.strong>{" with a dip-then-rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎯 Mastering the Chinese \"j\" sound:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"j"}</_components.strong>{" in Chinese is "}<_components.strong>{"different"}</_components.strong>{" from English:"}</_components.p>{"\n"}<_components.ol>{"\n"}<_components.li><_components.strong>{"Start with \"gee\""}</_components.strong>{" — like the letter \"G\""}</_components.li>{"\n"}<_components.li><_components.strong>{"Remove the \"g\""}</_components.strong>{" — keep only the soft \"ee\" part"}</_components.li>{"\n"}<_components.li><_components.strong>{"Make it whispered"}</_components.strong>{" — very soft, almost like a whisper"}</_components.li>{"\n"}<_components.li><_components.strong>{"Think \"gee\" without the \"g\""}</_components.strong>{" — a gentle, soft sound"}</_components.li>{"\n"}</_components.ol>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"third tone"}</_components.strong>{" (ˇ) is "}<_components.strong>{"falling then rising"}</_components.strong>{":"}</_components.p>{"\n"}<_components.p>{"Start "}<_components.strong>{"mid-level, dip down low, then rise up"}</_components.strong>{" — like saying \"hmm...\" when thinking. It's the\nlongest tone."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"尽 (jǐn) - \"use up; exhaust; to the utmost\""}</_components.li>{"\n"}<_components.li>{"尽量 (jǐn liàng) - \"as much as possible; try one's best\""}</_components.li>{"\n"}<_components.li>{"尽管 (jǐn guǎn) - \"although; even though\""}</_components.li>{"\n"}<_components.li>{"尽快 (jǐn kuài) - \"as soon as possible\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"📚 Note on Multiple Pronunciations:"}</_components.strong></_components.p>{"\n"}<_components.p>{"尽 has another pronunciation "}<_components.strong>{"jìn"}</_components.strong>{" (fourth tone) meaning \"to the limit; completely\":"}</_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"尽头 (jìn tóu) - \"end; extremity\""}</_components.li>{"\n"}<_components.li>{"用尽 (yòng jìn) - \"use up completely\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The falling-rising tone mimics the effort of using something up — you start strong, dip down as\nresources get low, then push to finish!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
