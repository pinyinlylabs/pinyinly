// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 张 (zhāng)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" zhāng"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: First tone"}</_components.strong>{" — "}<_components.strong>{"high and flat"}</_components.strong>{" tone, like a steady note: "}<_components.strong>{"\"Zhaaa\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"zh"}</_components.strong>{" like "}<_components.strong>{"\"j\""}</_components.strong>{" in \"judge\" (retroflex sound)"}</_components.li>{"\n"}<_components.li><_components.strong>{"āng"}</_components.strong>{" sounds like "}<_components.strong>{"\"ahng\""}</_components.strong>{" but with first tone → steady and high"}</_components.li>{"\n"}<_components.li><_components.strong>{"zhāng"}</_components.strong>{" sounds like "}<_components.strong>{"\"jahng\""}</_components.strong>{" with a steady high pitch"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"first tone"}</_components.strong>{" (¯) is a "}<_components.strong>{"high flat"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're stretching something taut: "}<_components.strong>{"\"zhāng\""}</_components.strong>{" — that's the steady, extended tone of\n"}<_components.strong>{"zhāng"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"张 (zhāng) - \"open/expand\" or surname \"Zhang\""}</_components.li>{"\n"}<_components.li>{"张开 (zhāng kāi) - \"open up/spread\""}</_components.li>{"\n"}<_components.li>{"紧张 (jǐn zhāng) - \"nervous/tense\""}</_components.li>{"\n"}<_components.li>{"夸张 (kuā zhāng) - \"exaggerate\""}</_components.li>{"\n"}<_components.li>{"张三 (Zhāng Sān) - \"Zhang San\" (common name)"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"张 means \"open/expand\" — the steady first tone is like the controlled motion of "}<_components.strong>{"opening"}</_components.strong>{" or\n"}<_components.strong>{"expanding"}</_components.strong>{" something!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
