// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 商 (shāng)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" shāng"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: First tone"}</_components.strong>{" — "}<_components.strong>{"high and flat"}</_components.strong>{" tone, like a steady note: "}<_components.strong>{"\"Shaang\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"sh"}</_components.strong>{" like "}<_components.strong>{"\"sh\""}</_components.strong>{" in \"shop\""}</_components.li>{"\n"}<_components.li><_components.strong>{"āng"}</_components.strong>{" sounds like "}<_components.strong>{"\"ahng\""}</_components.strong>{" in \"gong\", held steady and high"}</_components.li>{"\n"}<_components.li><_components.strong>{"shāng"}</_components.strong>{" sounds like "}<_components.strong>{"\"shahng\""}</_components.strong>{" with a steady high pitch"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"first tone"}</_components.strong>{" (ˉ) is "}<_components.strong>{"high and level"}</_components.strong>{":"}</_components.p>{"\n"}<_components.p>{"Say it like confidently discussing business: "}<_components.strong>{"\"shāng\""}</_components.strong>{" — that steady, professional tone."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"商 (shāng) - \"commerce; business; merchant\""}</_components.li>{"\n"}<_components.li>{"商业 (shāng yè) - \"business; commerce\""}</_components.li>{"\n"}<_components.li>{"商店 (shāng diàn) - \"shop; store\""}</_components.li>{"\n"}<_components.li>{"商场 (shāng chǎng) - \"shopping mall\""}</_components.li>{"\n"}<_components.li>{"商人 (shāng rén) - \"merchant; businessman\""}</_components.li>{"\n"}<_components.li>{"商品 (shāng pǐn) - \"commodity; goods\""}</_components.li>{"\n"}<_components.li>{"商量 (shāng liang) - \"to discuss; to deliberate\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The character suggests a "}<_components.strong>{"building structure"}</_components.strong>{" — like the steady, organized world of "}<_components.strong>{"commerce"}</_components.strong>{"\nand "}<_components.strong>{"business"}</_components.strong>{"!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
