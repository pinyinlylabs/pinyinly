// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 并 (bìng)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" bìng"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Fourth tone"}</_components.strong>{" — sharp "}<_components.strong>{"falling"}</_components.strong>{" tone, like giving a command"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"b"}</_components.strong>{" like "}<_components.strong>{"\"b\""}</_components.strong>{" in \"bing\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ìng"}</_components.strong>{" sounds like "}<_components.strong>{"\"eeng\""}</_components.strong>{" but with fourth tone → sharp fall"}</_components.li>{"\n"}<_components.li><_components.strong>{"bìng"}</_components.strong>{" sounds like "}<_components.strong>{"\"beeng\""}</_components.strong>{" with a sharp downward drop"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip (Fourth tone: ˋ)"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"fourth tone"}</_components.strong>{" is a "}<_components.strong>{"sharp falling"}</_components.strong>{" tone, like giving a firm command:"}</_components.p>{"\n"}<_components.p>{"Say it like firmly stating things are "}<_components.strong>{"together"}</_components.strong>{": "}<_components.strong>{"\"bìng!\""}</_components.strong>{" — that decisive drop is the "}<_components.strong>{"fourth\ntone"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"并 (bìng) - \"together; and; furthermore\""}</_components.li>{"\n"}<_components.li>{"并且 (bìng qiě) - \"and; moreover\""}</_components.li>{"\n"}<_components.li>{"合并 (hé bìng) - \"merge; combine\""}</_components.li>{"\n"}<_components.li>{"并列 (bìng liè) - \"side by side; parallel\""}</_components.li>{"\n"}<_components.li>{"并非 (bìng fēi) - \"not; it is not the case that\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of "}<_components.strong>{"并"}</_components.strong>{" as firmly joining things "}<_components.strong>{"together"}</_components.strong>{" with that decisive "}<_components.strong>{"fourth tone"}</_components.strong>{" authority!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
