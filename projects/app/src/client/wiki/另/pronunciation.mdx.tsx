// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 另 (lìng)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" lìng"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Fourth tone"}</_components.strong>{" — sharp "}<_components.strong>{"falling"}</_components.strong>{" tone, like giving a command"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"l"}</_components.strong>{" like "}<_components.strong>{"\"l\""}</_components.strong>{" in \"light\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ìng"}</_components.strong>{" sounds like "}<_components.strong>{"\"ing\""}</_components.strong>{" in \"sing\" but with fourth tone → sharp falling"}</_components.li>{"\n"}<_components.li><_components.strong>{"lìng"}</_components.strong>{" sounds like "}<_components.strong>{"\"ling\""}</_components.strong>{" with a sharp drop"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"fourth tone"}</_components.strong>{" (ˋ) is a "}<_components.strong>{"sharp falling"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're pointing to something else: "}<_components.strong>{"\"lìng!\""}</_components.strong>{" — that's the decisive tone pattern of\n"}<_components.strong>{"lìng"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"另 (lìng) - \"another; other; separate\""}</_components.li>{"\n"}<_components.li>{"另外 (lìng wài) - \"in addition; besides\""}</_components.li>{"\n"}<_components.li>{"另一个 (lìng yī gè) - \"another one\""}</_components.li>{"\n"}<_components.li>{"另一方面 (lìng yī fāng miàn) - \"on the other hand\""}</_components.li>{"\n"}<_components.li>{"另类 (lìng lèi) - \"alternative; different\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of "}<_components.strong>{"\"ling\""}</_components.strong>{" with a sharp drop — when pointing to "}<_components.strong>{"another"}</_components.strong>{" option, you often speak\ndecisively, just like the fourth tone!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
