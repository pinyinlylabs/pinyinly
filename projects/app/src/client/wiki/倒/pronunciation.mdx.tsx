// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 倒"}</_components.strong></_components.p>{"\n"}<_components.p>{"倒 has "}<_components.strong>{"two different pronunciations"}</_components.strong>{" depending on its meaning:"}</_components.p>{"\n"}<_components.p><_components.strong>{"📍 dǎo (third tone) - \"to fall down, to collapse\""}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" dǎo"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Third tone"}</_components.strong>{" — "}<_components.strong>{"falling-rising"}</_components.strong>{" tone, like saying \"uh-huh\" when nodding"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"d"}</_components.strong>{" like "}<_components.strong>{"\"d\""}</_components.strong>{" in \"dog\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ǎo"}</_components.strong>{" sounds like "}<_components.strong>{"\"ow\""}</_components.strong>{" in \"cow\", but with third tone → dip down and rise up"}</_components.li>{"\n"}<_components.li><_components.strong>{"dǎo"}</_components.strong>{" sounds like "}<_components.strong>{"\"dow\""}</_components.strong>{" with a dip-then-rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"📍 dào (fourth tone) - \"to pour, upside down\""}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" dào"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Fourth tone"}</_components.strong>{" — sharp "}<_components.strong>{"falling"}</_components.strong>{" tone, like giving a command"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"d"}</_components.strong>{" like "}<_components.strong>{"\"d\""}</_components.strong>{" in \"dog\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ào"}</_components.strong>{" sounds like "}<_components.strong>{"\"ow\""}</_components.strong>{" in \"cow\", but with fourth tone → sharp falling"}</_components.li>{"\n"}<_components.li><_components.strong>{"dào"}</_components.strong>{" sounds like "}<_components.strong>{"\"dow!\""}</_components.strong>{" with a sharp drop"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p><_components.strong>{"dǎo"}</_components.strong>{" (third tone) = "}<_components.strong>{"fall-then-rise"}</_components.strong>{" — like something falling and bouncing back up "}<_components.strong>{"dào"}</_components.strong>{"\n(fourth tone) = "}<_components.strong>{"sharp drop"}</_components.strong>{" — like pouring water down"}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Usage Guide:"}</_components.strong></_components.p>{"\n"}<_components.p><_components.strong>{"倒 (dǎo) - \"to fall down, to collapse\":"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"倒下 (dǎo xià) - \"to fall down\""}</_components.li>{"\n"}<_components.li>{"摔倒 (shuāi dǎo) - \"to fall; to trip\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"倒 (dào) - \"to pour, upside down\":"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"倒水 (dào shuǐ) - \"to pour water\""}</_components.li>{"\n"}<_components.li>{"倒车 (dào chē) - \"to reverse (a car)\""}</_components.li>{"\n"}<_components.li>{"颠倒 (diān dào) - \"upside down\""}</_components.li>{"\n"}</_components.ul></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
