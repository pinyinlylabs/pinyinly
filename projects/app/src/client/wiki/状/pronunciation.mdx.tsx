// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 状 (zhuàng)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" zhuàng"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Fourth tone"}</_components.strong>{" — sharp "}<_components.strong>{"falling"}</_components.strong>{" tone, like giving a command"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"zh"}</_components.strong>{" like "}<_components.strong>{"\"j\""}</_components.strong>{" in \"judge\" but with tongue curled back"}</_components.li>{"\n"}<_components.li><_components.strong>{"uàng"}</_components.strong>{" sounds like "}<_components.strong>{"\"wahng\""}</_components.strong>{" but with a sharp falling tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"zhuàng"}</_components.strong>{" sounds like "}<_components.strong>{"\"jwahng!\""}</_components.strong>{" with a sharp drop"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"fourth tone"}</_components.strong>{" (ˋ) is a "}<_components.strong>{"sharp falling"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're describing a definite form: "}<_components.strong>{"\"zhuàng!\""}</_components.strong>{" — that sharp, decisive drop is the\n"}<_components.strong>{"fourth tone"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"状 (zhuàng) - \"form; shape; condition\""}</_components.li>{"\n"}<_components.li>{"状况 (zhuàng kuàng) - \"situation; condition\""}</_components.li>{"\n"}<_components.li>{"状态 (zhuàng tài) - \"state; condition\""}</_components.li>{"\n"}<_components.li>{"形状 (xíng zhuàng) - \"shape; form\""}</_components.li>{"\n"}<_components.li>{"症状 (zhèng zhuàng) - \"symptom\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of "}<_components.strong>{"状"}</_components.strong>{" as definitively describing a shape: "}<_components.strong>{"\"zhuàng!\""}</_components.strong>{" — that sharp emphasis matches the\n"}<_components.strong>{"fourth tone"}</_components.strong>{"!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
