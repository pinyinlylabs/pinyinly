// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"üó£Ô∏è Pronunciation of Ë∞∑ (g«î)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" g«î"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Third tone"}</_components.strong>{" ‚Äî "}<_components.strong>{"falling-rising"}</_components.strong>{" tone, like saying \"uh-huh\" when nodding"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"üî§ Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"g"}</_components.strong>{" like "}<_components.strong>{"\"g\""}</_components.strong>{" in \"go\""}</_components.li>{"\n"}<_components.li><_components.strong>{"«î"}</_components.strong>{" sounds like "}<_components.strong>{"\"oo\""}</_components.strong>{" in \"book\" but with third tone ‚Üí dip down and rise up"}</_components.li>{"\n"}<_components.li><_components.strong>{"g«î"}</_components.strong>{" sounds like "}<_components.strong>{"\"goo\""}</_components.strong>{" with a dip-then-rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"üéß Tone tip (Third tone: Àá)"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"third tone"}</_components.strong>{" is "}<_components.strong>{"falling-rising"}</_components.strong>{", like when you're contemplating:"}</_components.p>{"\n"}<_components.p>{"Say it like you're thinking about a peaceful valley: "}<_components.strong>{"\"g«î...\""}</_components.strong>{" ‚Äî that dip-and-rise pattern is the\n"}<_components.strong>{"third tone"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"üìù Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"Ë∞∑ (g«î) - \"valley; grain\""}</_components.li>{"\n"}<_components.li>{"Â±±Ë∞∑ (shƒÅn g«î) - \"mountain valley\""}</_components.li>{"\n"}<_components.li>{"Ë∞∑Áâ© (g«î w√π) - \"grain; cereal\""}</_components.li>{"\n"}<_components.li>{"Â≥°Ë∞∑ (xi√° g«î) - \"canyon; gorge\""}</_components.li>{"\n"}<_components.li>{"Ê≤≥Ë∞∑ (h√© g«î) - \"river valley\""}</_components.li>{"\n"}<_components.li>{"‰∫îË∞∑ (w«î g«î) - \"five grains\" (traditional term for staple crops)"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"üí° Dual Meaning:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Ë∞∑ (g«î) has two main meanings:"}</_components.p>{"\n"}<_components.ol>{"\n"}<_components.li><_components.strong>{"Geographic"}</_components.strong>{": valley, ravine"}</_components.li>{"\n"}<_components.li><_components.strong>{"Agricultural"}</_components.strong>{": grain, cereal crops"}</_components.li>{"\n"}</_components.ol>{"\n"}<_components.p>{"Both meanings share the same pronunciation and are related to the concept of fertile, productive\nlow-lying areas."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
