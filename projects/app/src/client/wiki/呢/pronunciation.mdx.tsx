// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 呢 (ne)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" ne"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Neutral tone"}</_components.strong>{" — "}<_components.strong>{"light and short"}</_components.strong>{", unstressed"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"n"}</_components.strong>{" like "}<_components.strong>{"\"n\""}</_components.strong>{" in \"no\""}</_components.li>{"\n"}<_components.li><_components.strong>{"e"}</_components.strong>{" sounds like "}<_components.strong>{"\"uh\""}</_components.strong>{" in \"about\", but very light and quick"}</_components.li>{"\n"}<_components.li><_components.strong>{"ne"}</_components.strong>{" sounds like "}<_components.strong>{"\"nuh\""}</_components.strong>{" said quickly and lightly"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"neutral tone"}</_components.strong>{" (no mark) is "}<_components.strong>{"light and unstressed"}</_components.strong>{":"}</_components.p>{"\n"}<_components.p>{"Say it quickly and lightly, like "}<_components.strong>{"\"nuh\""}</_components.strong>{" — don't emphasize it, just let it flow naturally after\nthe main word."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"呢 (ne) - question particle (used at end of sentences)"}</_components.li>{"\n"}<_components.li>{"你好呢 (nǐ hǎo ne) - \"How about you?\""}</_components.li>{"\n"}<_components.li>{"他呢？(tā ne) - \"What about him?\""}</_components.li>{"\n"}<_components.li>{"这个呢？(zhè ge ne) - \"What about this one?\""}</_components.li>{"\n"}<_components.li>{"你在干什么呢？(nǐ zài gàn shén me ne) - \"What are you doing?\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Usage Note:"}</_components.strong></_components.p>{"\n"}<_components.p>{"呢 (ne) is a "}<_components.strong>{"sentence-final particle"}</_components.strong>{" that:"}</_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"Makes questions softer and more casual"}</_components.li>{"\n"}<_components.li>{"Implies \"what about...\" or \"how about...\""}</_components.li>{"\n"}<_components.li>{"Should always be pronounced with neutral tone"}</_components.li>{"\n"}</_components.ul></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
