// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 没 (méi)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" méi"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question: "}<_components.strong>{"\"Really?\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"m"}</_components.strong>{" exactly like English "}<_components.strong>{"\"m\""}</_components.strong>{" in \"me\""}</_components.li>{"\n"}<_components.li><_components.strong>{"éi"}</_components.strong>{" sounds like "}<_components.strong>{"\"ay\""}</_components.strong>{" in \"way\" but with rising tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"méi"}</_components.strong>{" sounds like "}<_components.strong>{"\"may?\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎯 Mastering the \"éi\" final:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"éi"}</_components.strong>{" ending is a "}<_components.strong>{"diphthong"}</_components.strong>{" (two sounds blended):"}</_components.p>{"\n"}<_components.ol>{"\n"}<_components.li><_components.strong>{"Start with \"eh\""}</_components.strong>{" like in \"bed\" (but shorter)"}</_components.li>{"\n"}<_components.li><_components.strong>{"Glide quickly to \"ee\""}</_components.strong>{" like in \"see\""}</_components.li>{"\n"}<_components.li><_components.strong>{"Blend smoothly"}</_components.strong>{" — don't pause between the sounds"}</_components.li>{"\n"}<_components.li><_components.strong>{"Keep it short and crisp"}</_components.strong>{" — not drawn out like English \"way\""}</_components.li>{"\n"}</_components.ol>{"\n"}<_components.p><_components.strong>{"Common mistakes:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"❌ \"may\" with flat tone — needs the rising tone"}</_components.li>{"\n"}<_components.li>{"❌ \"mee\" (just one sound) — needs to start with \"eh\" and glide to \"ee\""}</_components.li>{"\n"}<_components.li>{"❌ \"may\" drawn out like English — should be quick and crisp"}</_components.li>{"\n"}<_components.li>{"✅ \"méi\" — quick \"m\" + \"eh-ee\" glide + rising tone"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" (ˊ) is "}<_components.strong>{"rising and questioning"}</_components.strong>{":"}</_components.p>{"\n"}<_components.p>{"Start "}<_components.strong>{"low and rise up"}</_components.strong>{" — like asking \"Oh really?\" or expressing surprise: "}<_components.strong>{"\"méi?\""}</_components.strong></_components.p>{"\n"}<_components.p><_components.strong>{"📝 Practice words:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"没有 (méi yǒu) - \"don't have; there isn't\""}</_components.li>{"\n"}<_components.li>{"没关系 (méi guān xi) - \"doesn't matter; no problem\""}</_components.li>{"\n"}<_components.li>{"没事 (méi shì) - \"it's okay; nothing's wrong\""}</_components.li>{"\n"}<_components.li>{"没问题 (méi wèn tí) - \"no problem\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of someone asking "}<_components.strong>{"\"May I?\""}</_components.strong>{" with a questioning tone — but say it quickly and crisply. The\nrising tone suggests you're checking if something exists or happened!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
