// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 程 (chéng)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" chéng"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"ch"}</_components.strong>{" like "}<_components.strong>{"\"ch\""}</_components.strong>{" in \"church\""}</_components.li>{"\n"}<_components.li><_components.strong>{"éng"}</_components.strong>{" sounds like "}<_components.strong>{"\"ung\""}</_components.strong>{" in \"hung\", but with second tone → rise up"}</_components.li>{"\n"}<_components.li><_components.strong>{"chéng"}</_components.strong>{" sounds like "}<_components.strong>{"\"chung\""}</_components.strong>{" with a rising tone, like asking \"chung?\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" (´) is a "}<_components.strong>{"rising"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're asking: "}<_components.strong>{"\"chéng?\""}</_components.strong>{" — that's the questioning rise of "}<_components.strong>{"chéng"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"程 (chéng) - \"sequence; process; journey\""}</_components.li>{"\n"}<_components.li>{"程度 (chéng dù) - \"degree; extent\""}</_components.li>{"\n"}<_components.li>{"过程 (guò chéng) - \"process\""}</_components.li>{"\n"}<_components.li>{"课程 (kè chéng) - \"course; curriculum\""}</_components.li>{"\n"}<_components.li>{"工程 (gōng chéng) - \"engineering; project\""}</_components.li>{"\n"}<_components.li>{"路程 (lù chéng) - \"distance; journey\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of the rising second tone as representing "}<_components.strong>{"progress"}</_components.strong>{" — like going "}<_components.strong>{"up"}</_components.strong>{" through the steps\nof a process or journey, which matches the meaning of 程."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
