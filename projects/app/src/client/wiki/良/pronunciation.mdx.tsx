// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 良 (liáng)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" liáng"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"l"}</_components.strong>{" like "}<_components.strong>{"\"l\""}</_components.strong>{" in \"light\""}</_components.li>{"\n"}<_components.li><_components.strong>{"iáng"}</_components.strong>{" sounds like "}<_components.strong>{"\"yahng\""}</_components.strong>{" but with second tone → rise up"}</_components.li>{"\n"}<_components.li><_components.strong>{"liáng"}</_components.strong>{" sounds like "}<_components.strong>{"\"lee-yahng\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip (Second tone: ´)"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" is a "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question:"}</_components.p>{"\n"}<_components.p>{"Say it like you're asking: "}<_components.strong>{"\"liáng?\""}</_components.strong>{" — that questioning rise is the "}<_components.strong>{"second tone"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"良 (liáng) - \"good, fine\""}</_components.li>{"\n"}<_components.li>{"良好 (liáng hǎo) - \"good, favorable\""}</_components.li>{"\n"}<_components.li>{"善良 (shàn liáng) - \"kind, good-hearted\""}</_components.li>{"\n"}<_components.li>{"良心 (liáng xīn) - \"conscience\""}</_components.li>{"\n"}<_components.li>{"优良 (yōu liáng) - \"excellent, fine\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of "}<_components.strong>{"良"}</_components.strong>{" as expressing something "}<_components.strong>{"good"}</_components.strong>{" with an upward, positive rising tone — that's the\n"}<_components.strong>{"second tone"}</_components.strong>{" optimistic quality!"}</_components.p>{"\n"}<_components.p><_components.strong>{"📍 Cultural Note:"}</_components.strong></_components.p>{"\n"}<_components.p>{"良 appears in many positive expressions in Chinese culture, often relating to moral goodness and\nquality, such as in 良师 (liáng shī) - \"good teacher\"."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
