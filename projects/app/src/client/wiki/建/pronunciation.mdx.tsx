// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 建 (jiàn)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" jiàn"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Fourth tone"}</_components.strong>{" — sharp "}<_components.strong>{"falling"}</_components.strong>{" tone, like giving a firm command"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"j"}</_components.strong>{" like "}<_components.strong>{"\"j\""}</_components.strong>{" in \"jeep\" but softer, more like \"gee\""}</_components.li>{"\n"}<_components.li><_components.strong>{"iàn"}</_components.strong>{" sounds like "}<_components.strong>{"\"yen\""}</_components.strong>{" but with fourth tone → sharp falling"}</_components.li>{"\n"}<_components.li><_components.strong>{"jiàn"}</_components.strong>{" sounds like "}<_components.strong>{"\"gyen!\""}</_components.strong>{" with a sharp drop in pitch"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"fourth tone"}</_components.strong>{" (ˋ) is a "}<_components.strong>{"sharp falling"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Start high and drop quickly and decisively, like when you say \"Build!\" as a strong command. "}<_components.strong>{"jiàn"}</_components.strong>{"\nshould sound firm and authoritative."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"建 (jiàn) - \"build; construct\""}</_components.li>{"\n"}<_components.li>{"建议 (jiàn yì) - \"suggest; proposal\""}</_components.li>{"\n"}<_components.li>{"建立 (jiàn lì) - \"establish; set up\""}</_components.li>{"\n"}<_components.li>{"建设 (jiàn shè) - \"construct; build up\""}</_components.li>{"\n"}<_components.li>{"建筑 (jiàn zhù) - \"architecture; building\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"建 means \"build\" — the "}<_components.strong>{"sharp, decisive"}</_components.strong>{" fourth tone sounds like giving a "}<_components.strong>{"strong command"}</_components.strong>{" to\nstart construction work!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
