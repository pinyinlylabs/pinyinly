// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 全 (quán)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" quán"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"qu"}</_components.strong>{" like "}<_components.strong>{"\"chw\""}</_components.strong>{" sound (similar to \"qu\" in \"question\")"}</_components.li>{"\n"}<_components.li><_components.strong>{"án"}</_components.strong>{" sounds like "}<_components.strong>{"\"ahn\""}</_components.strong>{" with a rising tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"quán"}</_components.strong>{" sounds like "}<_components.strong>{"\"chwahn?\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" (´) is a "}<_components.strong>{"rising"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're asking a question: "}<_components.strong>{"\"quán?\""}</_components.strong>{" — that's the tone pattern of "}<_components.strong>{"quán"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"全 (quán) - \"all; complete\""}</_components.li>{"\n"}<_components.li>{"全部 (quán bù) - \"all; entire\""}</_components.li>{"\n"}<_components.li>{"全国 (quán guó) - \"nationwide; whole country\""}</_components.li>{"\n"}<_components.li>{"全家 (quán jiā) - \"whole family\""}</_components.li>{"\n"}<_components.li>{"完全 (wán quán) - \"completely; entirely\""}</_components.li>{"\n"}<_components.li>{"全面 (quán miàn) - \"comprehensive; all-around\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Special Notes:"}</_components.strong></_components.p>{"\n"}<_components.p>{"全 consistently uses the second tone (quán) and means \"complete\" or \"all.\" It's often used to\nemphasize completeness or totality in compound words."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
