// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 课 (kè)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" kè"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Fourth tone"}</_components.strong>{" — "}<_components.strong>{"falling"}</_components.strong>{" tone, like stating a fact: "}<_components.strong>{"\"That's it!\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"k"}</_components.strong>{" like "}<_components.strong>{"\"k\""}</_components.strong>{" in \"keep\""}</_components.li>{"\n"}<_components.li><_components.strong>{"è"}</_components.strong>{" sounds like "}<_components.strong>{"\"uh\""}</_components.strong>{" in \"duh\" but with a sharp falling tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"kè"}</_components.strong>{" sounds like "}<_components.strong>{"\"kuh!\""}</_components.strong>{" with a sharp drop in pitch"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip (Fourth tone: ˋ)"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"fourth tone"}</_components.strong>{" is "}<_components.strong>{"sharp and falling"}</_components.strong>{", like making a firm statement:"}</_components.p>{"\n"}<_components.p>{"Say it like you're announcing a class: "}<_components.strong>{"\"kè!\""}</_components.strong>{" — that decisive, downward tone is the "}<_components.strong>{"fourth\ntone"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"课 (kè) - \"lesson; class\""}</_components.li>{"\n"}<_components.li>{"上课 (shàng kè) - \"attend class\""}</_components.li>{"\n"}<_components.li>{"课本 (kè běn) - \"textbook\""}</_components.li>{"\n"}<_components.li>{"课堂 (kè táng) - \"classroom\""}</_components.li>{"\n"}<_components.li>{"课程 (kè chéng) - \"curriculum; course\""}</_components.li>{"\n"}<_components.li>{"功课 (gōng kè) - \"homework\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Usage Note:"}</_components.strong></_components.p>{"\n"}<_components.p>{"课 (kè) is fundamental in educational contexts, representing both individual lessons and the broader\nconcept of coursework or academic subjects."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
