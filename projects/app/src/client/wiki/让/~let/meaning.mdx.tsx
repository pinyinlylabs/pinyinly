// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p>{"To permit or allow someone to do something; let; allow; make."}</_components.p>{"\n"}<_components.h2>{"Quick Reference"}</_components.h2>{"\n"}<_components.table><_components.thead><_components.tr><_components.th>{"Aspect"}</_components.th><_components.th>{"Info"}</_components.th></_components.tr></_components.thead><_components.tbody><_components.tr><_components.td>{"Pinyin"}</_components.td><_components.td>{"ràng"}</_components.td></_components.tr><_components.tr><_components.td>{"Core meaning"}</_components.td><_components.td>{"let; allow; make"}</_components.td></_components.tr><_components.tr><_components.td>{"Part of speech"}</_components.td><_components.td>{"verb"}</_components.td></_components.tr><_components.tr><_components.td>{"Tone"}</_components.td><_components.td>{"4th tone (falling)"}</_components.td></_components.tr></_components.tbody></_components.table>{"\n"}<_components.h2>{"Visual Breakdown"}</_components.h2>{"\n"}<_components.p>{"让 shows "}<_components.strong>{"speech (讠) + stepping aside (襄)"}</_components.strong>{" to represent yielding or allowing."}</_components.p>{"\n"}<_components.table><_components.thead><_components.tr><_components.th>{"Component"}</_components.th><_components.th>{"Meaning"}</_components.th><_components.th>{"Contribution to 让"}</_components.th></_components.tr></_components.thead><_components.tbody><_components.tr><_components.td><_components.strong>{"讠"}</_components.strong></_components.td><_components.td>{"speech; words; language"}</_components.td><_components.td>{"Shows verbal permission or communication"}</_components.td></_components.tr><_components.tr><_components.td><_components.strong>{"襄"}</_components.strong></_components.td><_components.td>{"assist; help; step aside"}</_components.td><_components.td>{"Emphasizes yielding or making way"}</_components.td></_components.tr></_components.tbody></_components.table>{"\n"}<_components.h2>{"Character Analysis: 让"}</_components.h2>{"\n"}<_components.p>{"让 depicts "}<_components.strong>{"speaking (讠) while stepping aside"}</_components.strong>{":"}</_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"讠"}</_components.strong>{" (speech radical) indicates this involves communication"}</_components.li>{"\n"}<_components.li><_components.strong>{"襄"}</_components.strong>{" originally meant to help or assist by stepping aside"}</_components.li>{"\n"}<_components.li>{"Together: using words to give permission or make way for someone"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.h2>{"Mnemonic"}</_components.h2>{"\n"}<_components.p>{"Think of 让 as "}<_components.strong>{"\"speaking while stepping aside\""}</_components.strong>{":"}</_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"讠 (speech) represents saying \"go ahead\" or \"you can do it\""}</_components.li>{"\n"}<_components.li>{"襄 (step aside) shows physically making room for someone"}</_components.li>{"\n"}<_components.li>{"Picture someone politely saying \"please, go ahead\" while stepping back"}</_components.li>{"\n"}<_components.li>{"It's both verbal permission and physical yielding"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.h2>{"Usage Examples"}</_components.h2>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"让我看看"}</_components.strong>{" (ràng wǒ kàn kan) - \"let me see\""}</_components.li>{"\n"}<_components.li><_components.strong>{"让他走"}</_components.strong>{" (ràng tā zǒu) - \"let him go\""}</_components.li>{"\n"}<_components.li><_components.strong>{"不让"}</_components.strong>{" (bù ràng) - \"not allow; don't let\""}</_components.li>{"\n"}<_components.li><_components.strong>{"让座"}</_components.strong>{" (ràng zuò) - \"give up one's seat\""}</_components.li>{"\n"}<_components.li><_components.strong>{"让路"}</_components.strong>{" (ràng lù) - \"make way; give way\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.h2>{"Grammar Patterns"}</_components.h2>{"\n"}<_components.p>{"让 is used in several patterns:"}</_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Permission"}</_components.strong>{": 让 + [person] + [action] - \"let [person] [do action]\""}</_components.li>{"\n"}<_components.li><_components.strong>{"Causative"}</_components.strong>{": 让 + [object] + [adjective] - \"make [object] [adjective]\""}</_components.li>{"\n"}<_components.li><_components.strong>{"Yielding"}</_components.strong>{": 让 + [thing] - \"give up [thing]\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.h2>{"Common Expressions"}</_components.h2>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"让一让"}</_components.strong>{" (ràng yī ràng) - \"excuse me; make way\""}</_components.li>{"\n"}<_components.li><_components.strong>{"让开"}</_components.strong>{" (ràng kāi) - \"get out of the way\""}</_components.li>{"\n"}<_components.li><_components.strong>{"让给"}</_components.strong>{" (ràng gěi) - \"give/yield to\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.h2>{"Cultural Context"}</_components.h2>{"\n"}<_components.p>{"让 embodies important Chinese social values:"}</_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Courtesy"}</_components.strong>{": The importance of being polite and yielding to others"}</_components.li>{"\n"}<_components.li><_components.strong>{"Hierarchy"}</_components.strong>{": Knowing when to defer to elders or authority"}</_components.li>{"\n"}<_components.li><_components.strong>{"Harmony"}</_components.strong>{": Avoiding conflict by allowing others to go first"}</_components.li>{"\n"}<_components.li><_components.strong>{"Reciprocity"}</_components.strong>{": The expectation that yielding will be returned when needed"}</_components.li>{"\n"}</_components.ul></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
