// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 比 (bǐ)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" bǐ"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Third tone"}</_components.strong>{" — "}<_components.strong>{"falling-rising"}</_components.strong>{" tone, like saying \"uh-huh\" when nodding"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"b"}</_components.strong>{" like "}<_components.strong>{"\"b\""}</_components.strong>{" in \"bee\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ǐ"}</_components.strong>{" sounds like "}<_components.strong>{"\"ee\""}</_components.strong>{" in \"see\", but with the "}<_components.strong>{"third tone"}</_components.strong>{" → dip down and rise up"}</_components.li>{"\n"}<_components.li><_components.strong>{"bǐ"}</_components.strong>{" sounds like "}<_components.strong>{"\"bee\""}</_components.strong>{" with a dip-then-rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip (Third tone: ˇ)"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"third tone"}</_components.strong>{" is a "}<_components.strong>{"fall–then-rise"}</_components.strong>{" tone, like being thoughtful:"}</_components.p>{"\n"}<_components.p>{"Say it like you're comparing two things: "}<_components.strong>{"\"bǐ...\""}</_components.strong>{" — that contemplative dip-and-rise is the\n"}<_components.strong>{"third tone"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"比 (bǐ) - \"compare; than\""}</_components.li>{"\n"}<_components.li>{"比较 (bǐ jiào) - \"to compare; relatively\""}</_components.li>{"\n"}<_components.li>{"比如 (bǐ rú) - \"for example\""}</_components.li>{"\n"}<_components.li>{"比赛 (bǐ sài) - \"competition; match\""}</_components.li>{"\n"}<_components.li>{"对比 (duì bǐ) - \"contrast; comparison\""}</_components.li>{"\n"}<_components.li>{"比方 (bǐ fāng) - \"analogy; example\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Special Notes:"}</_components.strong></_components.p>{"\n"}<_components.p>{"比 is essential for making comparisons in Chinese. It's used in the pattern \"A 比 B + adjective\" to\nmean \"A is more [adjective] than B,\" such as 他比我高 (tā bǐ wǒ gāo) - \"He is taller than me.\""}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
