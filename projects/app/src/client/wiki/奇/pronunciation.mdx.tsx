// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 奇 (qí)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" qí"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"q"}</_components.strong>{" like "}<_components.strong>{"\"ch\""}</_components.strong>{" in \"cheap\" (but more back in the throat)"}</_components.li>{"\n"}<_components.li><_components.strong>{"í"}</_components.strong>{" sounds like "}<_components.strong>{"\"ee\""}</_components.strong>{" in \"see\", but with second tone → rising pitch"}</_components.li>{"\n"}<_components.li><_components.strong>{"qí"}</_components.strong>{" sounds like "}<_components.strong>{"\"chee?\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" (´) is a "}<_components.strong>{"rising"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're surprised and asking: "}<_components.strong>{"\"qí?\""}</_components.strong>{" — that's the upward curiosity of the "}<_components.strong>{"second\ntone"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"奇 (qí) - \"strange\" (often in compounds)"}</_components.li>{"\n"}<_components.li>{"奇怪 (qí guài) - \"strange, odd\""}</_components.li>{"\n"}<_components.li>{"好奇 (hào qí) - \"curious\""}</_components.li>{"\n"}<_components.li>{"神奇 (shén qí) - \"magical, miraculous\""}</_components.li>{"\n"}<_components.li>{"奇迹 (qí jì) - \"miracle\""}</_components.li>{"\n"}<_components.li>{"奇妙 (qí miào) - \"wonderful, marvelous\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Special Notes:"}</_components.strong></_components.p>{"\n"}<_components.p>{"奇 is commonly used to describe things that are unusual, strange, or remarkable. It appears\nfrequently in compound words and is essential vocabulary for expressing curiosity, wonder, or\ndescribing unusual situations."}</_components.p>{"\n"}<_components.p><_components.strong>{"📍 Usage Context:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The character 奇 often carries a positive connotation when describing something remarkable or\nwonderful, though it can also simply mean \"strange\" or \"odd\" in neutral contexts."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
