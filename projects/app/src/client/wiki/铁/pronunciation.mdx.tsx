// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 铁 (tiě)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" tiě"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Third tone"}</_components.strong>{" — "}<_components.strong>{"falling-rising"}</_components.strong>{" tone, like saying \"uh-huh\" when nodding"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"t"}</_components.strong>{" like "}<_components.strong>{"\"t\""}</_components.strong>{" in \"tea\""}</_components.li>{"\n"}<_components.li><_components.strong>{"iě"}</_components.strong>{" sounds like "}<_components.strong>{"\"yeah\""}</_components.strong>{" but with third tone → dip down and rise up"}</_components.li>{"\n"}<_components.li><_components.strong>{"tiě"}</_components.strong>{" sounds like "}<_components.strong>{"\"t-yeah\""}</_components.strong>{" with a dip-then-rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"third tone"}</_components.strong>{" (ˇ) is a "}<_components.strong>{"fall–then-rise"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're being thoughtful: "}<_components.strong>{"\"tiě...\""}</_components.strong>{" — dip down then come back up."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"铁 (tiě) - \"iron\""}</_components.li>{"\n"}<_components.li>{"铁路 (tiě lù) - \"railway\""}</_components.li>{"\n"}<_components.li>{"地铁 (dì tiě) - \"subway, metro\""}</_components.li>{"\n"}<_components.li>{"钢铁 (gāng tiě) - \"steel\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"📝 Special Notes:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The character 铁 contains the metal radical 钅, which makes sense since iron is a fundamental metal."}</_components.p>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of "}<_components.strong>{"iron"}</_components.strong>{" being strong but flexible — like the "}<_components.strong>{"third tone"}</_components.strong>{" that bends down then comes\nback up!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
