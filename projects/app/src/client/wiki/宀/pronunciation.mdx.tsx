// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 宀 (mián)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" mián"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"m"}</_components.strong>{" like "}<_components.strong>{"\"m\""}</_components.strong>{" in \"moon\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ián"}</_components.strong>{" sounds like "}<_components.strong>{"\"yen\""}</_components.strong>{" in \"Japanese yen\", but with second tone → rising upward"}</_components.li>{"\n"}<_components.li><_components.strong>{"mián"}</_components.strong>{" sounds like "}<_components.strong>{"\"myen?\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" (ˊ) is a "}<_components.strong>{"rising"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're asking \"roof?\" with curiosity: "}<_components.strong>{"\"mián?\""}</_components.strong>{" — that's the rising tone pattern of\n"}<_components.strong>{"mián"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"宀 (mián) - \"roof radical\""}</_components.li>{"\n"}<_components.li>{"宀 appears in characters like 家 (jiā) - \"family/home\""}</_components.li>{"\n"}<_components.li>{"宀 appears in characters like 安 (ān) - \"peaceful\""}</_components.li>{"\n"}<_components.li>{"宀 appears in characters like 室 (shì) - \"room\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"📍 Cultural Note:"}</_components.strong></_components.p>{"\n"}<_components.p>{"宀 is a "}<_components.strong>{"radical"}</_components.strong>{" (component) that represents a roof or shelter. It's not used as a standalone\nword in modern Chinese, but appears as a component in many characters related to homes, buildings,\nand shelter."}</_components.p>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p><_components.strong>{"Roof"}</_components.strong>{" — the rising second tone is like the peaked shape of a traditional "}<_components.strong>{"roof"}</_components.strong>{"!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
