// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 银 (yín)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" yín"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"y"}</_components.strong>{" like "}<_components.strong>{"\"y\""}</_components.strong>{" in \"yes\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ín"}</_components.strong>{" sounds like "}<_components.strong>{"\"een\""}</_components.strong>{" in \"seen\" but with a rising tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"yín"}</_components.strong>{" sounds like "}<_components.strong>{"\"yeen\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" (ˊ) is a "}<_components.strong>{"rising"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Start low and rise up: "}<_components.strong>{"\"yín?\""}</_components.strong>{" — like asking \"Silver?\" with curiosity."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"银 (yín) - \"silver\""}</_components.li>{"\n"}<_components.li>{"银行 (yín háng) - \"bank\""}</_components.li>{"\n"}<_components.li>{"银牌 (yín pái) - \"silver medal\""}</_components.li>{"\n"}<_components.li>{"银行卡 (yín háng kǎ) - \"bank card\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"📝 Special Notes:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The character 银 contains the metal radical 钅, which is appropriate since silver is a precious\nmetal. Notice how 银行 (bank) literally means \"silver business,\" reflecting the historical\nconnection between banks and precious metals."}</_components.p>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"When you see something "}<_components.strong>{"silver"}</_components.strong>{" and shiny, you might ask \"Silver?\" with a rising tone of\ncuriosity!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
