// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 片 (piàn)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" piàn"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Fourth tone"}</_components.strong>{" — sharp "}<_components.strong>{"falling"}</_components.strong>{" tone, like giving a command"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"p"}</_components.strong>{" like "}<_components.strong>{"\"p\""}</_components.strong>{" in \"piece\" but with a slight puff of air"}</_components.li>{"\n"}<_components.li><_components.strong>{"iàn"}</_components.strong>{" sounds like "}<_components.strong>{"\"yen\""}</_components.strong>{" but with a sharp falling tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"piàn"}</_components.strong>{" sounds like "}<_components.strong>{"\"pyen!\""}</_components.strong>{" with a sharp drop"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"fourth tone"}</_components.strong>{" (ˋ) is a "}<_components.strong>{"sharp falling"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're cutting something into slices: "}<_components.strong>{"\"piàn!\""}</_components.strong>{" — that sharp, decisive drop is the\n"}<_components.strong>{"fourth tone"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"片 (piàn) - \"slice; piece\""}</_components.li>{"\n"}<_components.li>{"片子 (piàn zi) - \"slice; film\""}</_components.li>{"\n"}<_components.li>{"照片 (zhào piàn) - \"photograph\""}</_components.li>{"\n"}<_components.li>{"电影片 (diàn yǐng piàn) - \"movie film\""}</_components.li>{"\n"}<_components.li>{"药片 (yào piàn) - \"tablet; pill\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of "}<_components.strong>{"片"}</_components.strong>{" as sharply cutting a slice: "}<_components.strong>{"\"piàn!\""}</_components.strong>{" — that sharp downward motion matches the\n"}<_components.strong>{"fourth tone"}</_components.strong>{"!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
