// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 看 (kàn)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" kàn"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Fourth tone"}</_components.strong>{" — sharp "}<_components.strong>{"falling"}</_components.strong>{" tone, like giving a command: "}<_components.strong>{"\"Down!\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"k"}</_components.strong>{" like "}<_components.strong>{"\"k\""}</_components.strong>{" in \"key\""}</_components.li>{"\n"}<_components.li><_components.strong>{"àn"}</_components.strong>{" sounds like "}<_components.strong>{"\"ahn\""}</_components.strong>{" but with a sharp falling tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"kàn"}</_components.strong>{" sounds like "}<_components.strong>{"\"kahn!\""}</_components.strong>{" with a sharp drop"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"fourth tone"}</_components.strong>{" (ˋ) is a "}<_components.strong>{"sharp falling"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like giving a command to look: "}<_components.strong>{"\"kàn!\""}</_components.strong>{" — that's the decisive tone pattern of "}<_components.strong>{"kàn"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"看 (kàn) - \"see; look; watch\""}</_components.li>{"\n"}<_components.li>{"看见 (kàn jiàn) - \"see; catch sight of\""}</_components.li>{"\n"}<_components.li>{"看书 (kàn shū) - \"read a book\""}</_components.li>{"\n"}<_components.li>{"看电视 (kàn diàn shì) - \"watch TV\""}</_components.li>{"\n"}<_components.li>{"好看 (hǎo kàn) - \"good-looking; attractive\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of "}<_components.strong>{"\"kahn!\""}</_components.strong>{" with a sharp drop — when you want someone to "}<_components.strong>{"look"}</_components.strong>{" at something, you use a\ndecisive, commanding tone!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
