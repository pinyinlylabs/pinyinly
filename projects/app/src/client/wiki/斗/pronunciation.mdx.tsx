// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 斗 (dǒu)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" dǒu"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Third tone"}</_components.strong>{" — "}<_components.strong>{"falling-rising"}</_components.strong>{" tone, like saying \"uh-huh\" when nodding"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"d"}</_components.strong>{" like "}<_components.strong>{"\"d\""}</_components.strong>{" in \"dog\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ǒu"}</_components.strong>{" sounds like "}<_components.strong>{"\"oh\""}</_components.strong>{" in \"oh no\" but with third tone → dip down and rise up"}</_components.li>{"\n"}<_components.li><_components.strong>{"dǒu"}</_components.strong>{" sounds like "}<_components.strong>{"\"doh\""}</_components.strong>{" with a dip-then-rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"third tone"}</_components.strong>{" (ˇ) is a "}<_components.strong>{"fall–then-rise"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're pondering a measurement — "}<_components.strong>{"\"dǒu...\""}</_components.strong>{" — that thoughtful dip-and-rise is the\n"}<_components.strong>{"third tone"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"斗 (dǒu) - \"measurement unit\" (traditional Chinese measure)"}</_components.li>{"\n"}<_components.li>{"漏斗 (lòu dǒu) - \"funnel\""}</_components.li>{"\n"}<_components.li>{"北斗 (běi dǒu) - \"Big Dipper\""}</_components.li>{"\n"}<_components.li>{"斗量 (dǒu liáng) - \"to measure by the dou\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of "}<_components.strong>{"斗"}</_components.strong>{" as an ancient measuring cup — you hold it thoughtfully (third tone) when measuring\ngrain or rice."}</_components.p>{"\n"}<_components.p><_components.strong>{"📍 Cultural Note:"}</_components.strong></_components.p>{"\n"}<_components.p>{"斗 was historically used as a unit of volume measurement in ancient China, equivalent to about 10\nliters. It's still used in traditional contexts and idioms."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
