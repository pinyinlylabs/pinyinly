// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 亠 (tóu)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" tóu"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question: "}<_components.strong>{"\"Really?\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"t"}</_components.strong>{" like "}<_components.strong>{"\"t\""}</_components.strong>{" in \"top\""}</_components.li>{"\n"}<_components.li><_components.strong>{"óu"}</_components.strong>{" sounds like "}<_components.strong>{"\"oh\""}</_components.strong>{" but with a rising tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"tóu"}</_components.strong>{" sounds like "}<_components.strong>{"\"toe?\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip (Second tone: ˊ)"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" is a "}<_components.strong>{"rising"}</_components.strong>{" tone, like something on top going upward:"}</_components.p>{"\n"}<_components.p>{"Say it like you're pointing upward to something: "}<_components.strong>{"\"tóu?\""}</_components.strong>{" — that's the upward energy of "}<_components.strong>{"tóu"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"亠 (tóu) - \"lid; top cover\" (radical component)"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Special Notes:"}</_components.strong></_components.p>{"\n"}<_components.p>{"亠 is primarily used as a radical component in Chinese characters, representing a "}<_components.strong>{"lid"}</_components.strong>{" or "}<_components.strong>{"top\ncover"}</_components.strong>{". It appears at the top of characters like:"}</_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"京 (jīng) - \"capital\""}</_components.li>{"\n"}<_components.li>{"亮 (liàng) - \"bright\""}</_components.li>{"\n"}<_components.li>{"高 (gāo) - \"tall/high\""}</_components.li>{"\n"}<_components.li>{"夜 (yè) - \"night\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"📍 Visual Connection:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The radical 亠 looks like a simple roof or lid covering something below, which matches its meaning\nof \"lid\" or \"top cover\"!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
