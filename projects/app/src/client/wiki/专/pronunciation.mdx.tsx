// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 专 (zhuān)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" zhuān"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: First tone"}</_components.strong>{" — "}<_components.strong>{"high and flat"}</_components.strong>{" tone, like a steady note: "}<_components.strong>{"\"Zhwahn\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"zh"}</_components.strong>{" like "}<_components.strong>{"\"j\""}</_components.strong>{" in \"judge\" (but with tongue curled back)"}</_components.li>{"\n"}<_components.li><_components.strong>{"uān"}</_components.strong>{" sounds like "}<_components.strong>{"\"wahn\""}</_components.strong>{" with first tone → high and steady"}</_components.li>{"\n"}<_components.li><_components.strong>{"zhuān"}</_components.strong>{" sounds like "}<_components.strong>{"\"zhwahn\""}</_components.strong>{" with a high, flat pitch"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"first tone"}</_components.strong>{" (¯) is a "}<_components.strong>{"high and flat"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're holding a steady note: "}<_components.strong>{"\"zhuān...\""}</_components.strong>{" — that's the tone pattern of "}<_components.strong>{"zhuān"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"专 (zhuān) - \"monopolize; specialize\""}</_components.li>{"\n"}<_components.li>{"专业 (zhuān yè) - \"major; profession; specialty\""}</_components.li>{"\n"}<_components.li>{"专家 (zhuān jiā) - \"expert; specialist\""}</_components.li>{"\n"}<_components.li>{"专门 (zhuān mén) - \"specially; specifically\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Special Notes:"}</_components.strong></_components.p>{"\n"}<_components.p>{"专 relates to specialization, exclusivity, or focusing on one particular area. It's commonly used in\neducational and professional contexts, especially when discussing academic majors, professional\nspecialties, or expert knowledge in a specific field."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
