// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 着"}</_components.strong></_components.p>{"\n"}<_components.p>{"着 has "}<_components.strong>{"three different pronunciations"}</_components.strong>{" depending on its usage:"}</_components.p>{"\n"}<_components.p><_components.strong>{"📍 zhe (neutral tone) - continuous aspect particle"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" zhe (neutral tone)"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Neutral tone"}</_components.strong>{" — "}<_components.strong>{"light and quick"}</_components.strong>{", unstressed"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"zh"}</_components.strong>{" like "}<_components.strong>{"\"j\""}</_components.strong>{" in \"judge\" but with tongue curled back"}</_components.li>{"\n"}<_components.li><_components.strong>{"e"}</_components.strong>{" sounds like "}<_components.strong>{"\"uh\""}</_components.strong>{" but very light and quick"}</_components.li>{"\n"}<_components.li><_components.strong>{"zhe"}</_components.strong>{" sounds like a quick "}<_components.strong>{"\"juh\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"📍 zháo (second tone) - \"to touch, to catch\""}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" zháo"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"zh"}</_components.strong>{" like "}<_components.strong>{"\"j\""}</_components.strong>{" in \"judge\" but with tongue curled back"}</_components.li>{"\n"}<_components.li><_components.strong>{"áo"}</_components.strong>{" sounds like "}<_components.strong>{"\"ow\""}</_components.strong>{" in \"cow\" but with a rising tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"zháo"}</_components.strong>{" sounds like "}<_components.strong>{"\"jow?\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"📍 zhuó (second tone) - \"to wear, to put on\""}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" zhuó"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, same as above"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"zh"}</_components.strong>{" like "}<_components.strong>{"\"j\""}</_components.strong>{" in \"judge\" but with tongue curled back"}</_components.li>{"\n"}<_components.li><_components.strong>{"uó"}</_components.strong>{" sounds like "}<_components.strong>{"\"wo\""}</_components.strong>{" but with a rising tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"zhuó"}</_components.strong>{" sounds like "}<_components.strong>{"\"jwo?\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"📝 Usage Guide:"}</_components.strong></_components.p>{"\n"}<_components.p><_components.strong>{"着 (zhe) - continuous aspect (most common):"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"他看"}<_components.strong>{"着"}</_components.strong>{"电视 (tā kàn zhe diàn shì) - \"He is watching TV\""}</_components.li>{"\n"}<_components.li>{"等"}<_components.strong>{"着"}</_components.strong>{" (děng zhe) - \"waiting\" (ongoing action)"}</_components.li>{"\n"}<_components.li>{"坐"}<_components.strong>{"着"}</_components.strong>{" (zuò zhe) - \"sitting\" (ongoing state)"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"着 (zháo) - \"to touch, to catch, to succeed\":"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"睡"}<_components.strong>{"着"}</_components.strong>{"了 (shuì zháo le) - \"fell asleep\""}</_components.li>{"\n"}<_components.li>{"找不"}<_components.strong>{"着"}</_components.strong>{" (zhǎo bù zháo) - \"can't find\""}</_components.li>{"\n"}<_components.li><_components.strong>{"着"}</_components.strong>{"火 (zháo huǒ) - \"to catch fire\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"着 (zhuó) - \"to wear, to put on\":"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"着"}</_components.strong>{"装 (zhuó zhuāng) - \"to dress, attire\""}</_components.li>{"\n"}<_components.li>{"穿"}<_components.strong>{"着"}</_components.strong>{" (chuān zhuó) - \"wearing\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p><_components.strong>{"zhe"}</_components.strong>{" = light grammatical particle (like -ing) "}<_components.strong>{"zháo"}</_components.strong>{" = \"got it!\" — successful\ncontact/catching"}<_components.br />{"\n"}<_components.strong>{"zhuó"}</_components.strong>{" = formal \"wearing\" — think \"suit up\""}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
