// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 传 (chuán)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" chuán"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"ch"}</_components.strong>{" like "}<_components.strong>{"\"ch\""}</_components.strong>{" in \"chair\" (but with tongue curled back)"}</_components.li>{"\n"}<_components.li><_components.strong>{"uán"}</_components.strong>{" sounds like "}<_components.strong>{"\"wan\""}</_components.strong>{" in \"wander\", but with second tone → rising upward"}</_components.li>{"\n"}<_components.li><_components.strong>{"chuán"}</_components.strong>{" sounds like "}<_components.strong>{"\"chwan\""}</_components.strong>{" with a rising tone"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" (ˊ) is a "}<_components.strong>{"rising"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're asking if something should be passed along: "}<_components.strong>{"\"chuán?\""}</_components.strong>{" — that upward rise is\nthe second tone pattern."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"传 (chuán) - \"pass; transmit\""}</_components.li>{"\n"}<_components.li>{"传说 (chuán shuō) - \"legend; tradition\""}</_components.li>{"\n"}<_components.li>{"传播 (chuán bō) - \"spread; broadcast\""}</_components.li>{"\n"}<_components.li>{"传统 (chuán tǒng) - \"tradition\""}</_components.li>{"\n"}<_components.li>{"宣传 (xuān chuán) - \"publicity; propaganda\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of "}<_components.strong>{"\"chwan\""}</_components.strong>{" with a questioning rise — like asking if you should pass something on!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
