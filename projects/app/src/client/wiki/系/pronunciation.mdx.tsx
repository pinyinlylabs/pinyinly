// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 系 (xì)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" xì"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Fourth tone"}</_components.strong>{" — sharp "}<_components.strong>{"falling"}</_components.strong>{" tone, like stating a fact: "}<_components.strong>{"\"Connect!\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"x"}</_components.strong>{" like "}<_components.strong>{"\"sh\""}</_components.strong>{" in \"sheep\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ì"}</_components.strong>{" sounds like "}<_components.strong>{"\"ee\""}</_components.strong>{" but with fourth tone → sharp falling"}</_components.li>{"\n"}<_components.li><_components.strong>{"xì"}</_components.strong>{" sounds like "}<_components.strong>{"\"shee!\""}</_components.strong>{" with a sharp drop"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"fourth tone"}</_components.strong>{" (ˋ) is "}<_components.strong>{"authoritative and falling"}</_components.strong>{":"}</_components.p>{"\n"}<_components.p>{"Say it like you're establishing a connection or system: "}<_components.strong>{"\"xì!\""}</_components.strong>{" — that decisive tone."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"系 (xì) - \"system; department; tie\""}</_components.li>{"\n"}<_components.li>{"系统 (xì tǒng) - \"system\""}</_components.li>{"\n"}<_components.li>{"关系 (guān xì) - \"relationship; connection\""}</_components.li>{"\n"}<_components.li>{"联系 (lián xì) - \"contact; connection\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Special Note:"}</_components.strong></_components.p>{"\n"}<_components.p>{"系 has multiple pronunciations:"}</_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"xì"}</_components.strong>{" (4th tone) - \"system; tie; connect\" (most common)"}</_components.li>{"\n"}<_components.li><_components.strong>{"jì"}</_components.strong>{" (4th tone) - used in some compound words"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of "}<_components.strong>{"系"}</_components.strong>{" as connecting things together — that sharp fourth tone drop is like clicking two\npieces firmly into place!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
