// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 称 (chēng)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" chēng"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: First tone"}</_components.strong>{" — "}<_components.strong>{"high and flat"}</_components.strong>{" tone, like a steady note"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"ch"}</_components.strong>{" like "}<_components.strong>{"\"ch\""}</_components.strong>{" in \"church\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ēng"}</_components.strong>{" sounds like "}<_components.strong>{"\"ung\""}</_components.strong>{" in \"hung\", but with first tone → steady and high"}</_components.li>{"\n"}<_components.li><_components.strong>{"chēng"}</_components.strong>{" sounds like "}<_components.strong>{"\"chung\""}</_components.strong>{" with a steady high pitch"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"first tone"}</_components.strong>{" (ˉ) is a "}<_components.strong>{"high and flat"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're stating something clearly: "}<_components.strong>{"\"chēng\""}</_components.strong>{" — hold that high, steady pitch like\n"}<_components.strong>{"\"chēnggg\""}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Note on Pronunciation:"}</_components.strong></_components.p>{"\n"}<_components.p>{"称 has multiple pronunciations:"}</_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"称 (chēng)"}</_components.strong>{" - \"to call; to say; to be called\" (first tone)"}</_components.li>{"\n"}<_components.li><_components.strong>{"称 (chèn)"}</_components.strong>{" - \"to weigh; scales\" (fourth tone)"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"📝 Common Examples with chēng:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"称 (chēng) - \"to call; to say\""}</_components.li>{"\n"}<_components.li>{"称为 (chēng wéi) - \"to be called; to be known as\""}</_components.li>{"\n"}<_components.li>{"名称 (míng chēng) - \"name; title\""}</_components.li>{"\n"}<_components.li>{"称呼 (chēng hu) - \"to address; form of address\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"For the \"to call/say\" meaning, the steady first tone sounds like you're "}<_components.strong>{"clearly stating"}</_components.strong>{" or\n"}<_components.strong>{"calling out"}</_components.strong>{" something with confidence."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
