// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 色 (sè)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" sè"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Fourth tone"}</_components.strong>{" — sharp "}<_components.strong>{"falling"}</_components.strong>{" tone, like giving a command"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"s"}</_components.strong>{" like "}<_components.strong>{"\"s\""}</_components.strong>{" in \"see\""}</_components.li>{"\n"}<_components.li><_components.strong>{"è"}</_components.strong>{" sounds like "}<_components.strong>{"\"uh\""}</_components.strong>{" but with fourth tone → sharp fall down"}</_components.li>{"\n"}<_components.li><_components.strong>{"sè"}</_components.strong>{" sounds like "}<_components.strong>{"\"suh\""}</_components.strong>{" with a sharp drop"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip (Fourth tone: `)"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"fourth tone"}</_components.strong>{" is a "}<_components.strong>{"sharp falling"}</_components.strong>{" tone, like being decisive:"}</_components.p>{"\n"}<_components.p>{"Say it like you're stating firmly: "}<_components.strong>{"\"sè!\""}</_components.strong>{" — that sharp downward drop is the "}<_components.strong>{"fourth tone"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"色 (sè) - \"color\""}</_components.li>{"\n"}<_components.li>{"颜色 (yán sè) - \"color\""}</_components.li>{"\n"}<_components.li>{"红色 (hóng sè) - \"red color\""}</_components.li>{"\n"}<_components.li>{"白色 (bái sè) - \"white color\""}</_components.li>{"\n"}<_components.li>{"绿色 (lǜ sè) - \"green color\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of "}<_components.strong>{"色"}</_components.strong>{" as pointing decisively at a color — that sharp, definitive gesture matches the\n"}<_components.strong>{"fourth tone"}</_components.strong>{"!"}</_components.p>{"\n"}<_components.p><_components.strong>{"📍 Cultural Note:"}</_components.strong></_components.p>{"\n"}<_components.p>{"色 is fundamental in Chinese when describing colors and appears in countless color combinations,\nfrom basic colors to complex shades."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
