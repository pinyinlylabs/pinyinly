// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 廾 (gǒng)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" gǒng"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Third tone"}</_components.strong>{" — "}<_components.strong>{"falling-rising"}</_components.strong>{" tone, like saying \"uh-huh\" when nodding"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"g"}</_components.strong>{" like "}<_components.strong>{"\"g\""}</_components.strong>{" in \"go\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ǒng"}</_components.strong>{" sounds like "}<_components.strong>{"\"ong\""}</_components.strong>{" but with third tone → dip down and rise up"}</_components.li>{"\n"}<_components.li><_components.strong>{"gǒng"}</_components.strong>{" sounds like "}<_components.strong>{"\"gong\""}</_components.strong>{" with a dip-then-rise pattern"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"third tone"}</_components.strong>{" (ˇ) is a "}<_components.strong>{"fall–then-rise"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Start mid, dip down low, then rise back up, like when you're thinking or being thoughtful. "}<_components.strong>{"gǒng"}</_components.strong>{"\nshould have that contemplative quality."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.p>{"廾 is a "}<_components.strong>{"radical component"}</_components.strong>{" that appears in characters related to hands or holding:"}</_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"开 (kāi) - \"open\" (contains 廾)"}</_components.li>{"\n"}<_components.li>{"弄 (nòng) - \"do; handle\" (contains 廾)"}</_components.li>{"\n"}<_components.li>{"异 (yì) - \"different\" (contains 廾)"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔧 Special Notes:"}</_components.strong></_components.p>{"\n"}<_components.p>{"廾 is primarily used as a "}<_components.strong>{"radical"}</_components.strong>{" (building component) rather than as a standalone character in\nmodern Chinese. It represents \"two hands\" or the concept of \"joining hands.\""}</_components.p>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"廾 as the \"two hands\" radical uses the "}<_components.strong>{"gentle, joining"}</_components.strong>{" third tone — like two hands coming\ntogether in a "}<_components.strong>{"thoughtful, cooperative"}</_components.strong>{" gesture!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
