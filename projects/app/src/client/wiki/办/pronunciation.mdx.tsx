// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 办 (bàn)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" bàn"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Fourth tone"}</_components.strong>{" — sharp "}<_components.strong>{"falling"}</_components.strong>{" tone, like giving a command: "}<_components.strong>{"\"Ban!\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"b"}</_components.strong>{" like "}<_components.strong>{"\"b\""}</_components.strong>{" in \"ban\""}</_components.li>{"\n"}<_components.li><_components.strong>{"àn"}</_components.strong>{" sounds like "}<_components.strong>{"\"ahn\""}</_components.strong>{" in \"john\" but with a sharp falling tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"bàn"}</_components.strong>{" sounds like "}<_components.strong>{"\"bahn!\""}</_components.strong>{" with a sharp drop"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"fourth tone"}</_components.strong>{" (ˋ) is a "}<_components.strong>{"sharp falling"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're being decisive or giving a firm instruction: "}<_components.strong>{"\"bàn!\""}</_components.strong>{" — that's the energy of\nfourth tone."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"办 (bàn) - \"handle\""}</_components.li>{"\n"}<_components.li>{"办法 (bàn fǎ) - \"method, way\""}</_components.li>{"\n"}<_components.li>{"办公室 (bàn gōng shì) - \"office\""}</_components.li>{"\n"}<_components.li>{"办理 (bàn lǐ) - \"to handle, process\""}</_components.li>{"\n"}<_components.li>{"举办 (jǔ bàn) - \"to organize, hold\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of "}<_components.strong>{"bàn"}</_components.strong>{" as \"ban\" with authority — you're handling or managing something with decisiveness!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
