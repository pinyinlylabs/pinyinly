// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 断 (duàn)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" duàn"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Fourth tone"}</_components.strong>{" — sharp "}<_components.strong>{"falling"}</_components.strong>{" tone, like giving a command"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"d"}</_components.strong>{" like "}<_components.strong>{"\"d\""}</_components.strong>{" in \"dog\""}</_components.li>{"\n"}<_components.li><_components.strong>{"uàn"}</_components.strong>{" sounds like "}<_components.strong>{"\"wan\""}</_components.strong>{" in \"want\" but with fourth tone → sharp falling tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"duàn"}</_components.strong>{" sounds like "}<_components.strong>{"\"dwan!\""}</_components.strong>{" with a sharp drop"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"fourth tone"}</_components.strong>{" (`) is a sharp "}<_components.strong>{"falling"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're decisively cutting something — "}<_components.strong>{"\"duàn!\""}</_components.strong>{" — that sharp, decisive drop is the\n"}<_components.strong>{"fourth tone"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"断 (duàn) - \"to break, to snap, to cut off\""}</_components.li>{"\n"}<_components.li>{"中断 (zhōng duàn) - \"to interrupt\""}</_components.li>{"\n"}<_components.li>{"断线 (duàn xiàn) - \"broken line, disconnected\""}</_components.li>{"\n"}<_components.li>{"判断 (pàn duàn) - \"to judge, to decide\""}</_components.li>{"\n"}<_components.li>{"断开 (duàn kāi) - \"to break apart, to disconnect\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The sharp fourth tone of "}<_components.strong>{"断"}</_components.strong>{" matches the action — a decisive "}<_components.strong>{"snap"}</_components.strong>{" or "}<_components.strong>{"break"}</_components.strong>{"!"}</_components.p>{"\n"}<_components.p><_components.strong>{"📍 Usage Note:"}</_components.strong></_components.p>{"\n"}<_components.p>{"断 often implies a clean break or cut, whether physical (breaking a stick) or abstract (interrupting\na conversation, making a decision)."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
