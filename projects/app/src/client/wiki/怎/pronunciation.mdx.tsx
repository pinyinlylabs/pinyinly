// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 怎 (zěn)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" zěn"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Third tone"}</_components.strong>{" — "}<_components.strong>{"dipping"}</_components.strong>{" tone, goes down then up"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"z"}</_components.strong>{" like "}<_components.strong>{"\"ds\""}</_components.strong>{" in \"adds\" — tip of tongue against teeth"}</_components.li>{"\n"}<_components.li><_components.strong>{"ěn"}</_components.strong>{" sounds like "}<_components.strong>{"\"un\""}</_components.strong>{" in \"fun\" but with third tone → dip down and up"}</_components.li>{"\n"}<_components.li><_components.strong>{"zěn"}</_components.strong>{" sounds like "}<_components.strong>{"\"dzun\""}</_components.strong>{" with a dipping tone"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎯 Mastering the \"z\" sound:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"z"}</_components.strong>{" in Chinese is different from English \"z\":"}</_components.p>{"\n"}<_components.ol>{"\n"}<_components.li><_components.strong>{"Place tongue tip"}</_components.strong>{" against your front teeth"}</_components.li>{"\n"}<_components.li><_components.strong>{"Make a \"ds\" sound"}</_components.strong>{" — like the end of \"adds\" or \"lids\""}</_components.li>{"\n"}<_components.li><_components.strong>{"Keep it short and crisp"}</_components.strong>{" — not a long buzz like English \"z\""}</_components.li>{"\n"}<_components.li><_components.strong>{"Think \"ds\" but lighter"}</_components.strong></_components.li>{"\n"}</_components.ol>{"\n"}<_components.p><_components.strong>{"🎯 Mastering the \"ěn\" final:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"ěn"}</_components.strong>{" ending has a nasal quality:"}</_components.p>{"\n"}<_components.ol>{"\n"}<_components.li><_components.strong>{"Start with \"uh\""}</_components.strong>{" like in \"fun\""}</_components.li>{"\n"}<_components.li><_components.strong>{"Add \"n\""}</_components.strong>{" with tongue tip touching roof of mouth"}</_components.li>{"\n"}<_components.li><_components.strong>{"Make it nasal"}</_components.strong>{" — let sound resonate in your nose"}</_components.li>{"\n"}<_components.li><_components.strong>{"Add third tone"}</_components.strong>{" — dip down then rise up"}</_components.li>{"\n"}</_components.ol>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"third tone"}</_components.strong>{" (ˇ) is a "}<_components.strong>{"dipping"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Start "}<_components.strong>{"mid-low, go lower, then rise up"}</_components.strong>{" — like asking a question with uncertainty: "}<_components.strong>{"\"zěn?\""}</_components.strong></_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"怎 (zěn) - \"what? why? how?\""}</_components.li>{"\n"}<_components.li>{"怎么 (zěn me) - \"how? what? why?\""}</_components.li>{"\n"}<_components.li>{"怎么办 (zěn me bàn) - \"what to do?\""}</_components.li>{"\n"}<_components.li>{"怎么样 (zěn me yàng) - \"how about? how is it?\""}</_components.li>{"\n"}<_components.li>{"怎样 (zěn yàng) - \"how? in what way?\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of the questioning nature — "}<_components.strong>{"\"zěn?\""}</_components.strong>{" with that uncertain, dipping tone perfectly matches\nasking \"how?\" or \"what?\" in a puzzled way!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
