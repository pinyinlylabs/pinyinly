// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 纟 (mì)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" mì"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Fourth tone"}</_components.strong>{" — sharp "}<_components.strong>{"falling"}</_components.strong>{" tone, like giving a command"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"m"}</_components.strong>{" like "}<_components.strong>{"\"m\""}</_components.strong>{" in \"me\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ì"}</_components.strong>{" sounds like "}<_components.strong>{"\"ee\""}</_components.strong>{" in \"see\", but with fourth tone → sharp drop"}</_components.li>{"\n"}<_components.li><_components.strong>{"mì"}</_components.strong>{" sounds like "}<_components.strong>{"\"mee!\""}</_components.strong>{" with a sharp fall"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"fourth tone"}</_components.strong>{" (ˋ) is a "}<_components.strong>{"sharp falling"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're pointing out silk thread: "}<_components.strong>{"\"mì!\""}</_components.strong>{" — that's the sharp falling pattern of "}<_components.strong>{"mì"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Special Notes:"}</_components.strong></_components.p>{"\n"}<_components.p>{"纟 is the "}<_components.strong>{"silk radical"}</_components.strong>{" (simplified form of 糸). It appears as a component in many characters\nrelated to textiles, thread, and fabric:"}</_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"红 (hóng) - \"red\" (contains 纟)"}</_components.li>{"\n"}<_components.li>{"线 (xiàn) - \"line/thread\" (contains 纟)"}</_components.li>{"\n"}<_components.li>{"练 (liàn) - \"practice\" (contains 纟)"}</_components.li>{"\n"}<_components.li>{"组 (zǔ) - \"group\" (contains 纟)"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"As a "}<_components.strong>{"radical"}</_components.strong>{", 纟 represents the concept of "}<_components.strong>{"silk"}</_components.strong>{" and "}<_components.strong>{"thread"}</_components.strong>{" — fine materials that were\nhistorically valuable, hence the sharp, definitive fourth tone!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
