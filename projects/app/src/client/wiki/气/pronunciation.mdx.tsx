// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 气 (qì)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" qì"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Fourth tone"}</_components.strong>{" — sharp "}<_components.strong>{"falling"}</_components.strong>{" tone, like giving a command"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"q"}</_components.strong>{" like "}<_components.strong>{"\"ch\""}</_components.strong>{" in \"cheese\" (but with more air flow)"}</_components.li>{"\n"}<_components.li><_components.strong>{"ì"}</_components.strong>{" sounds like "}<_components.strong>{"\"ee\""}</_components.strong>{" in \"see\" but with the "}<_components.strong>{"fourth tone"}</_components.strong>{" → sharp fall down"}</_components.li>{"\n"}<_components.li><_components.strong>{"qì"}</_components.strong>{" sounds like "}<_components.strong>{"\"chee!\""}</_components.strong>{" with a sharp dropping pitch"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip (Fourth tone: ˋ)"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"fourth tone"}</_components.strong>{" is "}<_components.strong>{"sharp and falling"}</_components.strong>{", like making a firm statement:"}</_components.p>{"\n"}<_components.p>{"Say it like you're taking a deep breath or expressing energy: "}<_components.strong>{"\"qì!\""}</_components.strong>{" — that sharp, falling tone\nis the "}<_components.strong>{"fourth tone"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"气 (qì) - \"air; gas; breath; energy\""}</_components.li>{"\n"}<_components.li>{"空气 (kōng qì) - \"air\""}</_components.li>{"\n"}<_components.li>{"天气 (tiān qì) - \"weather\""}</_components.li>{"\n"}<_components.li>{"生气 (shēng qì) - \"angry; to get angry\""}</_components.li>{"\n"}<_components.li>{"气候 (qì hòu) - \"climate\""}</_components.li>{"\n"}<_components.li>{"氧气 (yǎng qì) - \"oxygen\""}</_components.li>{"\n"}<_components.li>{"勇气 (yǒng qì) - \"courage\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Special Notes:"}</_components.strong></_components.p>{"\n"}<_components.p>{"气 is a versatile character representing air, breath, energy, and even emotions. It's essential in\nweather-related vocabulary and appears in many compound words related to atmosphere, mood, and\nvitality."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
