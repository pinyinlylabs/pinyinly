// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 评 (píng)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" píng"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question: "}<_components.strong>{"\"ping?\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"p"}</_components.strong>{" like "}<_components.strong>{"\"p\""}</_components.strong>{" in \"ping\" but with a puff of air (aspirated)"}</_components.li>{"\n"}<_components.li><_components.strong>{"íng"}</_components.strong>{" sounds like "}<_components.strong>{"\"eeng\""}</_components.strong>{" with a rising tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"píng"}</_components.strong>{" sounds like "}<_components.strong>{"\"peeng?\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔊 Key Sound Tips:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"p"}</_components.strong>{" in Chinese is "}<_components.strong>{"aspirated"}</_components.strong>{" — hold your hand in front of your mouth and feel a strong puff\nof air when you say it, like the \"p\" in \"pin\" or \"pen\"."}</_components.p>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" (´) is a "}<_components.strong>{"rising"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Start "}<_components.strong>{"low and rise up"}</_components.strong>{" like you're asking a question or showing surprise: "}<_components.strong>{"\"píng?\""}</_components.strong></_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"评 (píng) - \"criticize; comment\""}</_components.li>{"\n"}<_components.li>{"评价 (píng jià) - \"evaluate; assess\""}</_components.li>{"\n"}<_components.li>{"批评 (pī píng) - \"criticize\""}</_components.li>{"\n"}<_components.li>{"评论 (píng lùn) - \"comment; review\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of "}<_components.strong>{"\"ping\""}</_components.strong>{" with a questioning tone — like asking \"ping?\" when testing a connection, but\nwith that rising intonation!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
