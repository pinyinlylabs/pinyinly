// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 彡 (shān)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" shān"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: First tone"}</_components.strong>{" — "}<_components.strong>{"high and flat"}</_components.strong>{" tone, like a steady note: "}<_components.strong>{"\"Shaaa\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"sh"}</_components.strong>{" like "}<_components.strong>{"\"sh\""}</_components.strong>{" in \"shoe\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ān"}</_components.strong>{" sounds like "}<_components.strong>{"\"ahn\""}</_components.strong>{" but with first tone → steady and high"}</_components.li>{"\n"}<_components.li><_components.strong>{"shān"}</_components.strong>{" sounds like "}<_components.strong>{"\"shahn\""}</_components.strong>{" with a steady high pitch"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"first tone"}</_components.strong>{" (¯) is a "}<_components.strong>{"high flat"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're describing flowing hair: "}<_components.strong>{"\"shān\""}</_components.strong>{" — that's the smooth, steady tone of "}<_components.strong>{"shān"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"彡 (shān) - \"hair\" (radical form, rarely used alone)"}</_components.li>{"\n"}<_components.li>{"Used as a component in characters like:"}</_components.li>{"\n"}<_components.li>{"形 (xíng) - \"shape/form\" (contains 彡)"}</_components.li>{"\n"}<_components.li>{"影 (yǐng) - \"shadow\" (contains 彡)"}</_components.li>{"\n"}<_components.li>{"彩 (cǎi) - \"color\" (contains 彡)"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Special Notes:"}</_components.strong></_components.p>{"\n"}<_components.p>{"彡 is primarily used as a radical component in other characters rather than as a standalone\ncharacter. It represents the concept of \"hair\" or flowing strokes."}</_components.p>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"彡 represents \"hair\" — the smooth first tone flows like "}<_components.strong>{"hair"}</_components.strong>{" blowing in the wind!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
