// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 在 (zài)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" zài"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Fourth tone"}</_components.strong>{" — sharp "}<_components.strong>{"falling"}</_components.strong>{" tone, like giving a command: "}<_components.strong>{"\"There!\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"z"}</_components.strong>{" like "}<_components.strong>{"\"dz\""}</_components.strong>{" in \"adds\" (but lighter)"}</_components.li>{"\n"}<_components.li><_components.strong>{"ài"}</_components.strong>{" sounds like "}<_components.strong>{"\"eye\""}</_components.strong>{", but with fourth tone → sharp drop"}</_components.li>{"\n"}<_components.li><_components.strong>{"zài"}</_components.strong>{" sounds like "}<_components.strong>{"\"dzye!\""}</_components.strong>{" with a sharp fall"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"fourth tone"}</_components.strong>{" (ˋ) starts "}<_components.strong>{"high"}</_components.strong>{" and drops "}<_components.strong>{"fast"}</_components.strong>{":"}</_components.p>{"\n"}<_components.p>{"Say it like you're pointing out a location: "}<_components.strong>{"\"zài!\""}</_components.strong>{" — that's the decisive falling tone of\n"}<_components.strong>{"zài"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"在 (zài) - \"at; in; on; (located) at\""}</_components.li>{"\n"}<_components.li>{"在家 (zài jiā) - \"at home\""}</_components.li>{"\n"}<_components.li>{"现在 (xiàn zài) - \"now; at present\""}</_components.li>{"\n"}<_components.li>{"存在 (cún zài) - \"exist\""}</_components.li>{"\n"}<_components.li>{"在线 (zài xiàn) - \"online\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of "}<_components.strong>{"在"}</_components.strong>{" (at/in) like firmly stating a location: "}<_components.strong>{"\"zài!\""}</_components.strong>{" — that's the "}<_components.strong>{"fourth tone"}</_components.strong>{"\ndefinitiveness!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
