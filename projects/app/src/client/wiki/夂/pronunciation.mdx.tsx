// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 夂 (zhǐ)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" zhǐ"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Third tone"}</_components.strong>{" — "}<_components.strong>{"falling-rising"}</_components.strong>{" tone, like saying \"uh-huh\" when nodding"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"zh"}</_components.strong>{" like "}<_components.strong>{"\"j\""}</_components.strong>{" in \"judge\" (but with tongue curled back)"}</_components.li>{"\n"}<_components.li><_components.strong>{"ǐ"}</_components.strong>{" sounds like "}<_components.strong>{"\"ir\""}</_components.strong>{" in \"sir\" but with third tone → dip down and rise up"}</_components.li>{"\n"}<_components.li><_components.strong>{"zhǐ"}</_components.strong>{" sounds like "}<_components.strong>{"\"jir\""}</_components.strong>{" with a dip-then-rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎯 Mastering the Chinese \"zh\" sound:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"zh"}</_components.strong>{" in Chinese has "}<_components.strong>{"retroflex tongue position"}</_components.strong>{":"}</_components.p>{"\n"}<_components.ol>{"\n"}<_components.li><_components.strong>{"Curl tongue back"}</_components.strong>{" — tip pointing toward roof of mouth"}</_components.li>{"\n"}<_components.li><_components.strong>{"Make \"j\" sound"}</_components.strong>{" — like \"judge\" but with curled tongue"}</_components.li>{"\n"}<_components.li><_components.strong>{"Deeper resonance"}</_components.strong>{" — sounds richer than English \"j\""}</_components.li>{"\n"}<_components.li><_components.strong>{"Keep it smooth"}</_components.strong>{" — not harsh or buzzy"}</_components.li>{"\n"}</_components.ol>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"third tone"}</_components.strong>{" (ˇ) is a "}<_components.strong>{"fall–then-rise"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're thinking or being thoughtful: "}<_components.strong>{"\"zhǐ...\""}</_components.strong>{" — that's the tone pattern of going\nsomewhere thoughtfully."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Note on Usage:"}</_components.strong></_components.p>{"\n"}<_components.p>{"夂 (zhǐ) is primarily a "}<_components.strong>{"radical"}</_components.strong>{" component meaning \"go\" or \"walk slowly.\" It appears in many\ncharacters related to movement but is rarely used independently in modern Chinese."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Characters containing 夂:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"处 (chù) - \"place\" (contains 夂)"}</_components.li>{"\n"}<_components.li>{"夏 (xià) - \"summer\" (contains 夂)"}</_components.li>{"\n"}<_components.li>{"复 (fù) - \"return\" (contains 夂)"}</_components.li>{"\n"}<_components.li>{"各 (gè) - \"each\" (contains 夂)"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"As a radical meaning \"go,\" think of the "}<_components.strong>{"third tone's dip and rise"}</_components.strong>{" like someone hesitating before\nwalking — "}<_components.strong>{"\"zhǐ...\""}</_components.strong>{" (should I go?)"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
