// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 民 (mín)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" mín"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"m"}</_components.strong>{" like "}<_components.strong>{"\"m\""}</_components.strong>{" in \"mean\""}</_components.li>{"\n"}<_components.li><_components.strong>{"ín"}</_components.strong>{" sounds like "}<_components.strong>{"\"een\""}</_components.strong>{" in \"seen\" but with a "}<_components.strong>{"rising"}</_components.strong>{" tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"mín"}</_components.strong>{" sounds like "}<_components.strong>{"\"meen?\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip (Second tone: ˊ)"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" is "}<_components.strong>{"rising"}</_components.strong>{", like asking a question:"}</_components.p>{"\n"}<_components.p>{"Say it like you're asking about the people: "}<_components.strong>{"\"mín?\""}</_components.strong>{" — that questioning rise is the "}<_components.strong>{"second\ntone"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"民 (mín) - \"people; citizens\""}</_components.li>{"\n"}<_components.li>{"人民 (rén mín) - \"people; citizens\""}</_components.li>{"\n"}<_components.li>{"民族 (mín zú) - \"ethnic group; nationality\""}</_components.li>{"\n"}<_components.li>{"民主 (mín zhǔ) - \"democracy\""}</_components.li>{"\n"}<_components.li>{"居民 (jū mín) - \"residents\""}</_components.li>{"\n"}<_components.li>{"农民 (nóng mín) - \"farmer; peasant\""}</_components.li>{"\n"}<_components.li>{"公民 (gōng mín) - \"citizen\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Special Notes:"}</_components.strong></_components.p>{"\n"}<_components.p>{"民 is a fundamental concept in Chinese culture and politics, referring to the people or citizens of\na country. It's commonly used in political, social, and cultural contexts to discuss citizenship,\nethnicity, and governance."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
