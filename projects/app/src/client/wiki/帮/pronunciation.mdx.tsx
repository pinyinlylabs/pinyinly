// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 帮 (bāng)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" bāng"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: First tone"}</_components.strong>{" — "}<_components.strong>{"high and flat"}</_components.strong>{" tone, like a steady note: "}<_components.strong>{"\"Bahng\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"b"}</_components.strong>{" like "}<_components.strong>{"\"b\""}</_components.strong>{" in \"bang\""}</_components.li>{"\n"}<_components.li><_components.strong>{"āng"}</_components.strong>{" sounds like "}<_components.strong>{"\"ahng\""}</_components.strong>{" but held steady and high"}</_components.li>{"\n"}<_components.li><_components.strong>{"bāng"}</_components.strong>{" sounds like "}<_components.strong>{"\"bahng\""}</_components.strong>{" with a steady high pitch"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip (First tone: ˉ)"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"first tone"}</_components.strong>{" is "}<_components.strong>{"high and flat"}</_components.strong>{", like holding a steady note:"}</_components.p>{"\n"}<_components.p>{"Say it like offering to "}<_components.strong>{"help"}</_components.strong>{": "}<_components.strong>{"\"bāng...\""}</_components.strong>{" — that steady, helpful tone is the "}<_components.strong>{"first tone"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"帮 (bāng) - \"help; assist\""}</_components.li>{"\n"}<_components.li>{"帮助 (bāng zhù) - \"help; assistance\""}</_components.li>{"\n"}<_components.li>{"帮忙 (bāng máng) - \"help; give a hand\""}</_components.li>{"\n"}<_components.li>{"帮派 (bāng pài) - \"gang; faction\""}</_components.li>{"\n"}<_components.li>{"帮工 (bāng gōng) - \"helper; assistant\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Think of "}<_components.strong>{"帮"}</_components.strong>{" as offering "}<_components.strong>{"help"}</_components.strong>{" with a steady, reliable voice — that's the "}<_components.strong>{"first tone"}</_components.strong>{"\ndependability!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
