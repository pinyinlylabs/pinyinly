// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"üó£Ô∏è Pronunciation of Âºè (sh√¨)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" sh√¨"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Fourth tone"}</_components.strong>{" ‚Äî sharp "}<_components.strong>{"falling"}</_components.strong>{" tone, like giving a command"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"üî§ Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"sh"}</_components.strong>{" like "}<_components.strong>{"\"sh\""}</_components.strong>{" in \"shoe\""}</_components.li>{"\n"}<_components.li><_components.strong>{"√¨"}</_components.strong>{" sounds like "}<_components.strong>{"\"ee\""}</_components.strong>{" in \"see\" but with a sharp falling tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"sh√¨"}</_components.strong>{" sounds like "}<_components.strong>{"\"she!\""}</_components.strong>{" with a sharp drop"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"üéß Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"fourth tone"}</_components.strong>{" (`) is a "}<_components.strong>{"sharp falling"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're making a formal announcement: "}<_components.strong>{"\"sh√¨!\""}</_components.strong>{" ‚Äî that's the sharp, falling tone of\n"}<_components.strong>{"sh√¨"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"üìù Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"Âºè (sh√¨) - \"style/type/ceremony\""}</_components.li>{"\n"}<_components.li>{"ÊñπÂºè (fƒÅng sh√¨) - \"method/way\""}</_components.li>{"\n"}<_components.li>{"ÂΩ¢Âºè (x√≠ng sh√¨) - \"form/format\""}</_components.li>{"\n"}<_components.li>{"Ê≠£Âºè (zh√®ng sh√¨) - \"formal/official\""}</_components.li>{"\n"}<_components.li>{"‰ª™Âºè (y√≠ sh√¨) - \"ceremony\""}</_components.li>{"\n"}<_components.li>{"ÂÖ¨Âºè (g≈çng sh√¨) - \"formula\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"üí° Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"Âºè means \"style/ceremony\" ‚Äî the sharp fourth tone sounds formal and official, like announcing a\n"}<_components.strong>{"ceremonial style"}</_components.strong>{"!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
