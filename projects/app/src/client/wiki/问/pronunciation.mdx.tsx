// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 问 (wèn)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" wèn"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Fourth tone"}</_components.strong>{" — sharp "}<_components.strong>{"falling"}</_components.strong>{" tone, like giving a command"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"w"}</_components.strong>{" like "}<_components.strong>{"\"w\""}</_components.strong>{" in \"way\""}</_components.li>{"\n"}<_components.li><_components.strong>{"èn"}</_components.strong>{" sounds like "}<_components.strong>{"\"en\""}</_components.strong>{" in \"pen\" but with a sharp falling tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"wèn"}</_components.strong>{" sounds like "}<_components.strong>{"\"when\""}</_components.strong>{" with a sharp drop"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"fourth tone"}</_components.strong>{" (ˋ) is a "}<_components.strong>{"sharp falling"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Start high and drop sharply: "}<_components.strong>{"\"wèn!\""}</_components.strong>{" — like asking a direct question with authority."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"问 (wèn) - \"ask, question\""}</_components.li>{"\n"}<_components.li>{"问题 (wèn tí) - \"question, problem\""}</_components.li>{"\n"}<_components.li>{"问路 (wèn lù) - \"ask for directions\""}</_components.li>{"\n"}<_components.li>{"请问 (qǐng wèn) - \"excuse me, may I ask\""}</_components.li>{"\n"}<_components.li>{"访问 (fǎng wèn) - \"visit, interview\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"📝 Special Notes:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The character 问 contains the door radical 门, which makes sense — asking questions often involves\ngoing through the \"door\" of someone's knowledge."}</_components.p>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"When you "}<_components.strong>{"ask"}</_components.strong>{" a direct question, you use a firm, falling tone — just like "}<_components.strong>{"wèn"}</_components.strong>{"!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
