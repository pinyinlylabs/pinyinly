// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 了"}</_components.strong></_components.p>{"\n"}<_components.p>{"了 has "}<_components.strong>{"two different pronunciations"}</_components.strong>{" depending on its usage:"}</_components.p>{"\n"}<_components.p><_components.strong>{"📍 le (neutral tone) - particle indicating completion/change"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" le (neutral tone)"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Neutral tone"}</_components.strong>{" — "}<_components.strong>{"light and quick"}</_components.strong>{", like the final syllable in \"simple\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"l"}</_components.strong>{" like "}<_components.strong>{"\"l\""}</_components.strong>{" in \"like\""}</_components.li>{"\n"}<_components.li><_components.strong>{"e"}</_components.strong>{" sounds like "}<_components.strong>{"\"uh\""}</_components.strong>{" but very light and quick"}</_components.li>{"\n"}<_components.li><_components.strong>{"le"}</_components.strong>{" sounds like a quick "}<_components.strong>{"\"luh\""}</_components.strong>{" at the end of sentences"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"📍 liǎo (third tone) - \"to finish, to understand\""}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" liǎo"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Third tone"}</_components.strong>{" — "}<_components.strong>{"falling-rising"}</_components.strong>{" tone, like saying \"uh-huh\" when nodding"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"l"}</_components.strong>{" like "}<_components.strong>{"\"l\""}</_components.strong>{" in \"like\""}</_components.li>{"\n"}<_components.li><_components.strong>{"iǎo"}</_components.strong>{" sounds like "}<_components.strong>{"\"ee-ow\""}</_components.strong>{" but with the third tone → dip down and rise up"}</_components.li>{"\n"}<_components.li><_components.strong>{"liǎo"}</_components.strong>{" sounds like "}<_components.strong>{"\"lee-ow\""}</_components.strong>{" with a dip-then-rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p><_components.strong>{"le"}</_components.strong>{" (neutral) = light, quick, unstressed — just a grammatical marker "}<_components.strong>{"liǎo"}</_components.strong>{" (third tone) = full\ntone with dip-then-rise — a real verb meaning"}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Usage Guide:"}</_components.strong></_components.p>{"\n"}<_components.p><_components.strong>{"了 (le) - completion/change particle (most common):"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"我吃"}<_components.strong>{"了"}</_components.strong>{"饭 (wǒ chī le fàn) - \"I ate\" (completed action)"}</_components.li>{"\n"}<_components.li>{"下雨"}<_components.strong>{"了"}</_components.strong>{" (xià yǔ le) - \"It's raining\" (change of state)"}</_components.li>{"\n"}<_components.li>{"他走"}<_components.strong>{"了"}</_components.strong>{" (tā zǒu le) - \"He left\" (completed action)"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"了 (liǎo) - \"to finish, to understand\" (less common):"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"看不"}<_components.strong>{"了"}</_components.strong>{" (kàn bù liǎo) - \"can't finish watching\""}</_components.li>{"\n"}<_components.li><_components.strong>{"了"}</_components.strong>{"解 (liǎo jiě) - \"to understand\""}</_components.li>{"\n"}<_components.li>{"受不"}<_components.strong>{"了"}</_components.strong>{" (shòu bù liǎo) - \"can't stand it\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p><_components.strong>{"le"}</_components.strong>{" is like \"the\" in English — a quick, light grammatical word "}<_components.strong>{"liǎo"}</_components.strong>{" is a full verb with\nmeaning — gets the full third tone treatment"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
