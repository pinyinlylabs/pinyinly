// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 念 (niàn)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" niàn"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Fourth tone"}</_components.strong>{" — sharp "}<_components.strong>{"falling"}</_components.strong>{" tone, like giving a command"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"n"}</_components.strong>{" like "}<_components.strong>{"\"n\""}</_components.strong>{" in \"new\""}</_components.li>{"\n"}<_components.li><_components.strong>{"iàn"}</_components.strong>{" sounds like "}<_components.strong>{"\"yen\""}</_components.strong>{" but with fourth tone → sharp drop"}</_components.li>{"\n"}<_components.li><_components.strong>{"niàn"}</_components.strong>{" sounds like "}<_components.strong>{"\"nyen!\""}</_components.strong>{" with a sharp falling tone"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"fourth tone"}</_components.strong>{" (ˋ) is a sharp "}<_components.strong>{"falling"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Say it like you're firmly stating something: "}<_components.strong>{"\"niàn!\""}</_components.strong>{" — that's the tone pattern of "}<_components.strong>{"niàn"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"念 (niàn) - \"read aloud\""}</_components.li>{"\n"}<_components.li>{"念书 (niàn shū) - \"study, read books\""}</_components.li>{"\n"}<_components.li>{"念头 (niàn tou) - \"thought, idea\""}</_components.li>{"\n"}<_components.li>{"纪念 (jì niàn) - \"commemorate\""}</_components.li>{"\n"}<_components.li>{"概念 (gài niàn) - \"concept\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Special Notes:"}</_components.strong></_components.p>{"\n"}<_components.p>{"念 can mean both \"to read aloud\" and \"to think about/miss\". The pronunciation remains "}<_components.strong>{"niàn"}</_components.strong>{"\n(fourth tone) in all contexts."}</_components.p>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p><_components.strong>{"Read aloud"}</_components.strong>{" with the sharp fourth tone — like a teacher firmly saying \"Read!\" to students!"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
