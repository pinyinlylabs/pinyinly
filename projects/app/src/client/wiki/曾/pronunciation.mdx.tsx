// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 曾 (céng)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" céng"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question with enthusiasm"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"c"}</_components.strong>{" like "}<_components.strong>{"\"ts\""}</_components.strong>{" in \"cats\""}</_components.li>{"\n"}<_components.li><_components.strong>{"éng"}</_components.strong>{" sounds like "}<_components.strong>{"\"ung\""}</_components.strong>{" in \"hung\", but with rising tone → goes up like asking a question"}</_components.li>{"\n"}<_components.li><_components.strong>{"céng"}</_components.strong>{" sounds like "}<_components.strong>{"\"tseng?\""}</_components.strong>{" with an upward rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" (´) is a "}<_components.strong>{"rising"}</_components.strong>{" tone:"}</_components.p>{"\n"}<_components.p>{"Start low and rise up high, like asking \"Really?\" The rising tone fits the meaning of something that\nhappened in the past."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"曾经 (céng jīng) - \"once; formerly; have ever\""}</_components.li>{"\n"}<_components.li>{"曾经是 (céng jīng shì) - \"used to be\""}</_components.li>{"\n"}<_components.li>{"不曾 (bù céng) - \"never; not ever\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"📚 Special Notes:"}</_components.strong></_components.p>{"\n"}<_components.p>{"曾 can also be pronounced "}<_components.strong>{"zēng"}</_components.strong>{" (first tone) when used as a surname, but "}<_components.strong>{"céng"}</_components.strong>{" (second tone)\nmeaning \"already/once\" is the primary pronunciation for the adverb usage."}</_components.p>{"\n"}<_components.p><_components.strong>{"💡 Memory Tip:"}</_components.strong></_components.p>{"\n"}<_components.p>{"曾 means \"already\" or \"once\" - when recalling something from the past, you naturally use that\nquestioning, reminiscent tone: "}<_components.strong>{"\"céng?\""}</_components.strong>{" (remember when...?)"}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
