// @ts-nocheck
/*@jsxRuntime automatic*/
/*@jsxImportSource react*/
import {useMDXComponents as _provideComponents} from "@/client/hooks/useMDXComponents";
function _createMdxContent(props: any) {
  const _components = Object.assign(Object.create(_provideComponents()), props.components);
  return <><_components.p><_components.strong>{"🗣️ Pronunciation of 谈 (tán)"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"Pinyin:"}</_components.strong>{" tán"}</_components.li>{"\n"}<_components.li><_components.strong>{"Tone: Second tone"}</_components.strong>{" — "}<_components.strong>{"rising"}</_components.strong>{" tone, like asking a question: "}<_components.strong>{"\"Really?\""}</_components.strong></_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🔤 Breakdown:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li><_components.strong>{"t"}</_components.strong>{" like "}<_components.strong>{"\"t\""}</_components.strong>{" in \"tea\""}</_components.li>{"\n"}<_components.li><_components.strong>{"án"}</_components.strong>{" sounds like "}<_components.strong>{"\"ahn\""}</_components.strong>{" but with a rising tone"}</_components.li>{"\n"}<_components.li><_components.strong>{"tán"}</_components.strong>{" sounds like "}<_components.strong>{"\"tahn?\""}</_components.strong>{" with a questioning rise"}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"🎧 Tone tip (Second tone: ˊ)"}</_components.strong></_components.p>{"\n"}<_components.p>{"The "}<_components.strong>{"second tone"}</_components.strong>{" is "}<_components.strong>{"rising"}</_components.strong>{", like when you're starting a conversation:"}</_components.p>{"\n"}<_components.p>{"Say it like you're suggesting "}<_components.strong>{"\"Let's talk?\""}</_components.strong>{": "}<_components.strong>{"\"tán?\""}</_components.strong>{" — that upward inflection is the "}<_components.strong>{"second\ntone"}</_components.strong>{"."}</_components.p>{"\n"}<_components.p><_components.strong>{"📝 Common Examples:"}</_components.strong></_components.p>{"\n"}<_components.ul>{"\n"}<_components.li>{"谈 (tán) - \"talk; discuss; chat\""}</_components.li>{"\n"}<_components.li>{"谈话 (tán huà) - \"conversation; talk\""}</_components.li>{"\n"}<_components.li>{"谈判 (tán pàn) - \"negotiate; negotiation\""}</_components.li>{"\n"}<_components.li>{"交谈 (jiāo tán) - \"converse; chat\""}</_components.li>{"\n"}<_components.li>{"谈论 (tán lùn) - \"discuss; talk about\""}</_components.li>{"\n"}<_components.li>{"访谈 (fǎng tán) - \"interview\""}</_components.li>{"\n"}</_components.ul>{"\n"}<_components.p><_components.strong>{"💡 Usage Note:"}</_components.strong></_components.p>{"\n"}<_components.p>{"谈 (tán) is used for various types of verbal communication, from casual chats to formal discussions\nand negotiations. It emphasizes the interactive nature of conversation."}</_components.p></>;
}
export default function MDXContent(props: any = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? <MDXLayout {...props}><_createMdxContent {...props} /></MDXLayout> : _createMdxContent(props);
}
