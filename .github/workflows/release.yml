name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: read

concurrency:
  # Ensure only one build at a time, so that DB migrations, EAS releases, Vercel
  # deployments, all happen in sequence and results are more deterministic.
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  database:
    runs-on: ubuntu-latest
    steps:
      - name: üèó Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup-tools

      - uses: ./.github/actions/moon-affected
        id: moon-dbMigrate-query
        with:
          target: app:dbMigrate

      - name: üöÄ Migrate database
        run: moon run app:dbMigrate --color --affected --remote
        # if: steps.moon-dbMigrate-query.target-affected
        env:
          DATABASE_URL: ${{ secrets.NEON_DATABASE_URL }}

  app-vercel:
    runs-on: ubuntu-latest
    steps:
      - name: üèó Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup-tools

      - uses: ./.github/actions/moon-affected
        id: moon-deployVercel-query
        with:
          target: app:deployVercel

      - name: üöÄ Deploy to Vercel (production)
        run: moon run app:deployVercel --color --affected --remote
        # if: steps.moon-deployVercel-query.target-affected
        env:
          EXPO_PUBLIC_POSTHOG_API_KEY: ${{ secrets.EXPO_PUBLIC_POSTHOG_API_KEY }}
          EXPO_PUBLIC_REPLICACHE_LICENSE_KEY: ${{ secrets.EXPO_PUBLIC_REPLICACHE_LICENSE_KEY }}
          EXPO_PUBLIC_SENTRY_DSN: ${{ secrets.EXPO_PUBLIC_SENTRY_DSN }}
          PYLY_STRICT_EXPO_ENV_VARS: "true"
          PYLY_VERCEL_PROD: ""
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_APP }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

  static-vercel:
    runs-on: ubuntu-latest
    steps:
      - name: üèó Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup-tools

      - uses: ./.github/actions/moon-affected
        id: moon-deploy-query
        with:
          target: static:deploy

      - name: üöÄ Deploy to Vercel (production)
        run: moon run static:deploy --color --affected --remote
        if: steps.moon-deploy-query.target-affected
        env:
          PYLY_VERCEL_PROD: ""
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_STATIC }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

  app-eas-update:
    runs-on: ubuntu-latest
    steps:
      - name: üèó Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup-tools

      - uses: ./.github/actions/moon-affected
        id: moon-deployEasUpdate-query
        with:
          target: app:deployEasUpdate

      - name: üöÄ Build and deploy
        run: moon run app:deployEasUpdate --color --affected --remote
        # if: steps.moon-deployEasUpdate-query.target-affected
        env:
          EXPO_PUBLIC_POSTHOG_API_KEY: ${{ secrets.EXPO_PUBLIC_POSTHOG_API_KEY }}
          EXPO_PUBLIC_REPLICACHE_LICENSE_KEY: ${{ secrets.EXPO_PUBLIC_REPLICACHE_LICENSE_KEY }}
          EXPO_PUBLIC_SENTRY_DSN: ${{ secrets.EXPO_PUBLIC_SENTRY_DSN }}
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          PYLY_STRICT_EXPO_ENV_VARS: "true"
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
