name: PR

on:
  merge_group:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  app-preview:
    runs-on: ubuntu-latest
    env:
      # Format: 'github_test_pr_' <run_id> [ ':' <run_attempt> ]
      #
      # The run attempt is only included for re-runs to keep the branch name
      # slightly shorter and cleaner when there is no re-run.
      NEON_BRANCH_NAME: github_test_pr_${{ github.run_id }}${{ github.run_attempt != '1' && format(':{0}', github.run_attempt) || '' }}
      NEON_DATABASE_NAME: hao
    steps:
      - name: üèó Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üèó Create database branch for running tests
        uses: neondatabase/create-branch-action@v5
        id: create-neon-branch
        with:
          api_key: ${{ secrets.NEON_API_KEY }}
          branch_name: ${{ env.NEON_BRANCH_NAME }}
          database: ${{ env.NEON_DATABASE_NAME }}
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          username: ${{ secrets.NEON_USERNAME }}

      - uses: ./.github/actions/setup-tools

      - uses: ./.github/actions/moon-affected
        id: moon-dbMigrate-query
        with:
          target: app:dbMigrate

      - run: moon run app:dbMigrate --color --affected --remote
        if: steps.moon-dbMigrate-query.target-affected
        env:
          DATABASE_URL: ${{ steps.create-neon-branch.outputs.db_url }}

      - uses: ./.github/actions/moon-affected
        id: moon-deployVercel-query
        with:
          target: app:deployVercel

      - name: üöÄ Deploy to Vercel (preview)
        run: moon run app:deployVercel --color --affected --remote
        if: steps.moon-deployVercel-query.target-affected
        env:
          EXPO_PUBLIC_POSTHOG_API_KEY: ${{ secrets.EXPO_PUBLIC_POSTHOG_API_KEY }}
          EXPO_PUBLIC_REPLICACHE_LICENSE_KEY: ${{ secrets.EXPO_PUBLIC_REPLICACHE_LICENSE_KEY }}
          EXPO_PUBLIC_SENTRY_DSN: ${{ secrets.EXPO_PUBLIC_SENTRY_DSN }}
          PYLY_VERCEL_PREVIEW: ""
          PYLY_STRICT_EXPO_ENV_VARS: "true"
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_APP }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - uses: neondatabase/delete-branch-action@v3
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          branch: ${{ env.NEON_BRANCH_NAME }}
          api_key: ${{ secrets.NEON_API_KEY }}
        if: ${{ always() }}

  static-preview:
    runs-on: ubuntu-latest
    steps:
      - name: üèó Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup-tools

      - uses: ./.github/actions/moon-affected
        id: moon-deploy-query
        with:
          target: static:deploy

      - name: üöÄ Deploy to Vercel (preview)
        run: moon run static:deploy --color --affected --remote
        if: steps.moon-deploy-query.target-affected
        env:
          PYLY_VERCEL_PREVIEW: ""
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_STATIC }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

  moon-ci:
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_STATIC }}
    strategy:
      matrix:
        index: [0, 1]
    steps:
      - name: üèó Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup-tools

      - run: moon ci --color --job ${{ matrix.index }} --jobTotal 2

      - name: üßæ Results
        uses: bradleyayers/moon-ci-retrospect@main
        if: ${{ always() }}
